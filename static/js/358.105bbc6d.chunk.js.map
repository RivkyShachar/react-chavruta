{"version":3,"file":"static/js/358.105bbc6d.chunk.js","mappings":"kNAOA,MA+CA,EA/CuBA,KACnB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IACnCC,GAAUC,EAAAA,EAAAA,KAAaC,GAAYA,EAAQC,YAAYC,cACvDC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,EAAMC,EAAAA,GAAU,mBAChBC,QAAiBC,EAAAA,EAAAA,IAAaH,EAAK,OAEjB,MAApBE,EAASE,QACTf,EAAY,IAAIa,EAASG,KAAKA,MAEtC,CAAE,MAAOC,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,GAGJE,EAAW,GACZ,IAGH,MAAMC,EAAmBrB,EAASsB,QAAQC,GACxB,GAAAC,OAAMD,EAAKE,UAAS,KAAAD,OAAID,EAAKG,UAC3BC,cAAcC,SAASzB,EAAQwB,iBAGnD,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,OAAMC,SAAC,eACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SACrBV,EAAiBY,KAAKV,IACnBM,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAEDC,GAAE,0BAAAX,OAA4BD,EAAKa,KACnCN,UAAU,yCACVO,QAASA,IAAM7B,GAAS8B,EAAAA,EAAAA,GAAmB,CAAE/B,YAAa,MAAQwB,SAAA,CAEjER,EAAKE,UAAU,IAAEF,EAAKG,WALlBH,EAAKa,WASpB,C","sources":["components/admin/usersListAdmin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSearchValueName } from '../../redux/featchers/searchSlice';\r\n\r\nconst UsersListAdmin = () => {\r\n    const [userList, setUserList] = useState([]);\r\n    const searchV = useSelector((myStore) => myStore.searchSlice.searchValue);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const url = API_URL + '/users/usersList';\r\n                const response = await doApiRequest(url, 'GET');\r\n\r\n                if (response.status === 200) {\r\n                    setUserList([...response.data.data]);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Filter the user list based on the search value using a similar approach to your server-side search\r\n    const filteredUserList = userList.filter((user) => {\r\n        const fullName = `${user.firstName} ${user.lastName}`;\r\n        return fullName.toLowerCase().includes(searchV.toLowerCase());\r\n    });\r\n\r\n    return (\r\n        <div className=\"container mt-4 w-50\">\r\n            <h2 className=\"mb-4\">User List</h2>\r\n            <ul className=\"list-group\">\r\n                {filteredUserList.map((user) => (\r\n                    <Link\r\n                        key={user._id}\r\n                        to={`/admin/singleUserAdmin/${user._id}`} // Adjust the route as needed\r\n                        className=\"list-group-item list-group-item-action\"\r\n                        onClick={() => dispatch(setSearchValueName({ searchValue: '' }))} // Clear the search value when clicking on a user\r\n                    >\r\n                        {user.firstName} {user.lastName}\r\n                    </Link>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersListAdmin;\r\n"],"names":["UsersListAdmin","userList","setUserList","useState","searchV","useSelector","myStore","searchSlice","searchValue","dispatch","useDispatch","useEffect","async","url","API_URL","response","doApiRequest","status","data","error","console","fetchData","filteredUserList","filter","user","concat","firstName","lastName","toLowerCase","includes","_jsxs","className","children","_jsx","map","Link","to","_id","onClick","setSearchValueName"],"sourceRoot":""}