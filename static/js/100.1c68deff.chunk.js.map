{"version":3,"file":"static/js/100.1c68deff.chunk.js","mappings":"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","sources":["components/admin/requestList.js","components/admin/singleRequest.js","components/admin/smallSingleRequest.js","components/admin/singleUserAdmin.js","components/admin/requestListFilter.js","pages/admin/userProfile.js","utill/dateFormat.js","utill/translator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport SmallSingleRequest from './smallSingleRequest';\r\n\r\nconst UsersListAdmin = () => {\r\n    const [requestList, setRequestList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n\r\n                const url = API_URL + '/studyRequests/requestsList';\r\n                const response = await doApiRequest(url, 'GET');\r\n                if (response.status === 200) {\r\n                    setRequestList([...response.data.data]);\r\n                }\r\n\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"re\", requestList);\r\n    }, [requestList]);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h2 className='mb-4'>Request List</h2>\r\n            {loading ? (\r\n                <div className='container align-items-center mt-5'>\r\n                    <div className='text-center'>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : requestList.length === 0 ? (\r\n                <div className='container align-items-center mt-5'>\r\n                    <div className='text-center'>\r\n                        <h4 className='display-4'>No requests</h4>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='row'>\r\n                    <SmallSingleRequest requests={requestList} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersListAdmin;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport translate from '../../utill/translator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport {formatDate} from '../../utill/dateFormat'\r\nconst FullRequestDetails = ({ selectedRequest, onClose }) => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  console.log(\"single\");\r\n  console.log(selectedRequest);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!selectedRequest) {\r\n      return; // Don't fetch data if no request is selected\r\n    }\r\n\r\n  }, [selectedRequest]); // Make selectedRequest a dependency of useEffect\r\n\r\n  if (!selectedRequest) {\r\n    return null; // Don't render anything if no request is selected\r\n  }\r\n\r\n  const clickYes = async (_data) => {\r\n    try{\r\n      const url = API_URL + `/event/markYes/${selectedRequest._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if(data.status===200){\r\n        console.log(\"added to yes\");\r\n        window.location.reload();\r\n        alert(\"added succesfully\")\r\n\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <div className=\"container mt-4\">\r\n          <h2>Full Request Details</h2>\r\n\r\n          <Link\r\n            key={selectedRequest.userId._id}\r\n            to={`/admin/singleUserAdmin/${selectedRequest.userId._id}`} // Adjust the route as needed\r\n            className=\"list-group-item list-group-item-action\"\r\n          >\r\n            Name: {selectedRequest.userId.firstName} {selectedRequest.userId.lastName}\r\n          \r\n          </Link>\r\n          <img src={selectedRequest.profilePic} alt={selectedRequest.profilePic}></img>\r\n          <p className=\"card-text\">{translate('post.topics', language)}: {selectedRequest.topics.join(', ')}</p>\r\n          <p className=\"card-text\">{translate('post.PreferredLanguages', language)}: {selectedRequest.preferredLanguages.join(', ')}</p>\r\n          <p className=\"card-text\">{translate('post.levelOfStudy', language)}: {selectedRequest.preferredLanguages}</p>\r\n          <p className=\"card-text\">state: {selectedRequest.state}</p>\r\n          <p className=\"card-text\">Start Date: {formatDate(selectedRequest.startDateAndTime, language)}</p>\r\n          <p className=\"card-text\">Study Duration: {selectedRequest.studyDuration.min} - {selectedRequest.studyDuration.max} {translate('general.minutes', language)} </p>\r\n          <p className=\"card-text\">Description: {selectedRequest.description}</p>\r\n          <p className=\"card-text\">id user: {selectedRequest.userId._id}</p>\r\n          <p className=\"card-text\">id request: {selectedRequest._id}</p>\r\n\r\n          <div className=\"d-flex justify-content-between mt-3\">\r\n            <button className=\"btn btn-warning\" onClick={() => clickYes(selectedRequest)}>Send request</button>\r\n            <button className=\"btn btn-danger\" onClick={onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullRequestDetails;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FullRequestDetails from './singleRequest';\r\nimport { useSelector } from 'react-redux';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { formatDate } from '../../utill/dateFormat'\r\nimport translate from '../../utill/translator';\r\n\r\nconst SmallSingleRequest = ({ requests }) => {\r\n\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [maor, setMaor] = useState(true);\r\n  const searchV = useSelector((myStore) => myStore.searchSlice1.searchValue1);\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  const handleRequestClick = (request) => {\r\n    setSelectedRequest(request);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setSelectedRequest(null);\r\n  };\r\n\r\n\r\n  const filteredRequestList = requests.filter((request) => {\r\n    const topicsString = request.topics.join(' '); // Convert the topics array to a string\r\n    return topicsString.toLowerCase().includes(searchV.toLowerCase());\r\n  });\r\n\r\n\r\n  const clickYes = async (request) => {\r\n    try {\r\n      window.location.reload();\r\n      setSelectedRequest(request);\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n  const clickNo = async (request) => {\r\n    try {\r\n      setMaor(false)\r\n      setSelectedRequest(request);\r\n      console.log(request);\r\n      const url = API_URL + `/event/markNo/${request._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        console.log(\"no\");\r\n      }\r\n      setMaor(true)\r\n      setSelectedRequest(null);\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {filteredRequestList.map((request) => (\r\n        <div key={request._id} className=\"col-md-4 mb-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <Link\r\n                onClick={() => handleRequestClick(request)}\r\n                className=\"request-link\"\r\n              >\r\n                <p className=\"card-text\">{translate('post.topics', language)}: {request.topics.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {request.preferredLanguages.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.levelOfStudy', language)}: {request.preferredLanguages}</p>\r\n                <p className=\"card-text\">{translate('post.state', language)}: {request.state}</p>\r\n                <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(request.startDateAndTime, language)}</p>\r\n                <p className=\"card-text\">{translate('post.studyDuration', language)}: {request.studyDuration.min} - {request.studyDuration.max} {translate('general.minutes', language)} </p>\r\n                <p className=\"card-text\">{translate('post.description', language)}: {request.description}</p>\r\n\r\n              </Link>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <button className=\"btn btn-warning\" onClick={() => clickYes(request)}>\r\n              {translate('post.yes', language)}\r\n              </button>\r\n              <button className=\"btn btn-danger\" onClick={() => clickNo(request)}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {maor && <FullRequestDetails selectedRequest={selectedRequest} onClose={handleCloseDetails} />}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default SmallSingleRequest;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useParams } from 'react-router-dom';\r\nimport translate from '../../utill/translator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SingleUserAdmin = () => {\r\n\r\n  const [singleUser, setSingleUser] = useState({});\r\n  const { idSingle1 } = useParams();\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = API_URL + `/users/single/${idSingle1}`;\r\n        const response = await doApiRequest(url, 'GET');\r\n        console.log(response);\r\n        if (response.status === 200) {\r\n          setSingleUser(response.data.data);\r\n        \r\n        }\r\n      } catch (error) {\r\n      }\r\n    };\r\n\r\n    fetchData(); // Call the async function immediately\r\n    // Empty dependency array means the effect runs once after the initial render\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-4 text-center\">\r\n      <h2 className=\"mb-4\">User Information</h2>\r\n      <div className=\"card\" style={{ width: '18rem', margin: 'auto' }}>\r\n        <img\r\n          src={singleUser.profilePic}\r\n          className=\"card-img-top\"\r\n          alt=\"Profile\"\r\n          style={{ height: '100%' }}\r\n        />        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{singleUser.firstName} {singleUser.lastName}</h5>\r\n          <p className=\"card-text text-right\">\r\n            <strong>role</strong> {singleUser.role}<br />\r\n            <strong>id</strong> {singleUser._id}<br />\r\n            <strong>Gender:</strong> {singleUser.gender === false ? 'Female' : 'Male'}<br />\r\n            <strong>Phone Number:</strong> {singleUser.phoneNumber}<br />\r\n            <strong>Email:</strong> {singleUser.email}<br />\r\n            <strong>Location:</strong> {singleUser.location}<br />\r\n            <strong>timezone</strong> {singleUser.timezone}<br />\r\n            <strong>Date created:</strong> {singleUser.dateCreated}<br />\r\n            <strong>Date of birth:</strong> {singleUser.dateOfBirth}<br />\r\n            <strong>request List</strong> {singleUser.requestList}<br />\r\n            <strong>{translate('post.topics', language)}</strong> {singleUser.topics}<br />\r\n            <strong>educations</strong> {singleUser.educations}<br />\r\n            <br></br>\r\n            <strong>followers</strong> {singleUser.followers}<br />\r\n            <strong>following</strong> {singleUser.following}<br />\r\n            <strong>blocked</strong> {singleUser.blocked}<br />\r\n            <br></br>\r\n\r\n            <strong>Question range</strong><br />\r\n            <strong>education Range</strong> {singleUser.educationRange}<br />\r\n            <strong>friend List Range</strong> {singleUser.friendListRange}<br />\r\n            <strong>location Range</strong> {singleUser.locationRange}<br />\r\n            <strong>age Range</strong> {singleUser.ageRange}<br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleUserAdmin;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSearchValueName } from '../../redux/featchers/searchSlice';\r\nimport SmallSingleRequest from './smallSingleRequest';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst RequestListFilter = () => {\r\n  const [requestList, setRequestList] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { idSingleRequest } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = API_URL + '/studyRequests/requestsList';\r\n        const response = await doApiRequest(url, 'GET');\r\n        if (response.status === 200) {\r\n          setRequestList([...response.data.data]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"re\", requestList);\r\n\r\n    // Filter the requestList based on idSingleRequest\r\n    const filteredList = requestList.filter(request => request.userId._id === idSingleRequest);\r\n\r\n    console.log(\"FilteredList\", filteredList);\r\n\r\n    // Update the state with the filtered list\r\n    setRequestList(filteredList);\r\n  }, [requestList, idSingleRequest]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h2 className='mb-4'>Request List</h2>\r\n      <div className='row'>\r\n        <SmallSingleRequest requests={requestList} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestListFilter;\r\n","import React from 'react'\r\nimport SingleUserAdmin from '../../components/admin/singleUserAdmin'\r\nimport RequestListById from '../../components/admin/requestListById'\r\nimport RequestList from '../../components/admin/requestList'\r\nimport RequestListFilter from '../../components/admin/requestListFilter'\r\n\r\nconst UserProfile = () => {\r\n    return (\r\n        <div>\r\n            <SingleUserAdmin />\r\n            <RequestListFilter/>\r\n            {/* <RequestList /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile","const formatDate = (dateTimeString, language) => {\r\n  const date = new Date(dateTimeString);\r\n\r\n  const options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  };\r\n\r\n  const locale = language === 'he' ? 'he-IL' : undefined;\r\n\r\n  const formattedDate = date.toLocaleDateString(locale, options);\r\n\r\n  return `${formattedDate}`;\r\n};\r\n\r\nexport { formatDate };\r\n","// translator.js\r\nimport enTranslations from '../locals/en.json';\r\nimport heTranslations from '../locals/he.json';\r\n\r\nconst translations = {\r\n  en: enTranslations,\r\n  he: heTranslations,\r\n};\r\n\r\nconst translate = (key, lang) => {\r\n  const keys = key.split('.');\r\n  let currentTranslation = translations[lang];\r\n\r\n  for (const k of keys) {\r\n    if (!currentTranslation || !currentTranslation[k]) {\r\n      return key; // Return the key itself if translation not found\r\n    }\r\n    currentTranslation = currentTranslation[k];\r\n  }\r\n\r\n  return currentTranslation;\r\n};\r\n\r\nexport default translate;\r\n"],"names":["UsersListAdmin","requestList","setRequestList","useState","loading","setLoading","useEffect","async","url","API_URL","response","doApiRequest","status","data","error","console","fetchData","log","_jsxs","className","children","_jsx","role","length","SmallSingleRequest","requests","_ref","selectedRequest","onClose","language","useSelector","myStore","languageSlice","Link","to","concat","userId","_id","firstName","lastName","src","profilePic","alt","translate","topics","join","preferredLanguages","state","formatDate","startDateAndTime","studyDuration","min","max","description","onClick","window","location","reload","alert","clickYes","setSelectedRequest","maor","setMaor","searchV","searchSlice1","searchValue1","filteredRequestList","filter","request","toLowerCase","includes","map","handleRequestClick","clickNo","FullRequestDetails","handleCloseDetails","SingleUserAdmin","singleUser","setSingleUser","idSingle1","useParams","style","width","margin","height","gender","phoneNumber","email","timezone","dateCreated","dateOfBirth","educations","followers","following","blocked","educationRange","friendListRange","locationRange","ageRange","RequestListFilter","idSingleRequest","useDispatch","filteredList","UserProfile","dateTimeString","locale","undefined","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","translations","en","he","key","lang","keys","split","currentTranslation","k"],"sourceRoot":""}