{"version":3,"file":"static/js/595.ce5baac4.chunk.js","mappings":"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","sources":["components/user/singleRequestMyProfile.js","components/common/sefariaSarch.js","components/common/sefariaSelectedTopics.js","components/user/filterBarHome.js","components/user/requestList.js","components/user/singleRequest.js","components/user/smallSingleRequest.js","components/user/userList.js","utill/dateFormat.js","utill/translator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FullRequestDetails from './singleRequest';\r\nimport UserList from './userList';\r\nimport { useSelector } from 'react-redux';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { formatDate } from '../../utill/dateFormat'\r\nimport translate from '../../utill/translator';\r\n\r\nconst SingleRequestMyProfile = ({ requests }) => {\r\n    const [isCardVisible, setIsCardVisible] = useState(null);\r\n    const [selectedRequest, setSelectedRequest] = useState(null);\r\n    // const [maor, setMaor] = useState(true);\r\n    let maor = true;\r\n    const searchV = useSelector((myStore) => myStore.searchSlice.searchValue);\r\n    const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n    const nav = useNavigate();\r\n\r\n\r\n\r\n    const handleRequestClick = (request) => {\r\n        setSelectedRequest(request);\r\n\r\n    };\r\n    const handleRequestClick1 = (request) => {\r\n        setIsCardVisible(request);\r\n    };\r\n    const handleRequestClickSingleUser = (request) => {\r\n\r\n        nav(`/user/singleUser/${request.finalChavruta._id}`, { replace: true })\r\n\r\n    };\r\n\r\n\r\n    const handleCloseDetails = () => {\r\n        setSelectedRequest(null);\r\n        // setIsCardVisible(null);\r\n    };\r\n    const handleCloseDetails1 = () => {\r\n        // setSelectedRequest(null);\r\n        setIsCardVisible(null);\r\n    };\r\n\r\n\r\n    const filteredRequestList = requests.filter((request) => {\r\n        const topicsString = request.topics.join(' ');\r\n        return topicsString.toLowerCase().includes(searchV.toLowerCase());\r\n    });\r\n\r\n    const clickYes = async (request) => {\r\n        try {\r\n            setSelectedRequest(request);\r\n            setIsCardVisible(request);\r\n            window.location.reload();\r\n\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n\r\n    const clickDelete = async (request) => {\r\n        try {\r\n            const url = API_URL + `/studyRequests/${request._id}`;\r\n            const data = await doApiRequest(url, \"DELETE\");\r\n            if (data.status === 204) {\r\n\r\n                window.location.reload();\r\n                console.log(\"deleted\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n\r\n    const clickCancle = async (request) => {\r\n        try {\r\n            const url = API_URL + `/studyRequests/cancleMeeting/${request._id}`;\r\n            const data = await doApiRequest(url, \"PUT\");\r\n            if (data.status === 201) {\r\n\r\n                window.location.reload();\r\n                console.log(\"cancled\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n    const calculateCountdown = (startDateAndTime) => {\r\n        const currentTime = new Date();\r\n\r\n        console.log('startDateAndTime:', startDateAndTime);\r\n        console.log('currentTime:', currentTime);\r\n\r\n        const timeDifference = startDateAndTime - currentTime;\r\n\r\n        if (isNaN(timeDifference)) {\r\n            console.error('Invalid date objects or subtraction operation.');\r\n            return 'Invalid date calculation';\r\n        }\r\n\r\n        if (timeDifference <= 0) {\r\n            return 'Meeting has started';\r\n        }\r\n\r\n        // Calculate days, hours, minutes, and seconds\r\n        const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\r\n        return `${days}d ${hours}h ${minutes}m ${seconds}s`;\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {filteredRequestList.map((request) => (\r\n                <div key={request._id} className=\"col-md-4 mb-4\">\r\n                    <div className={`card ${request.state === 'open' ? 'border-success border-5' :\r\n                        request.state === 'close' ? 'bg-info' :\r\n                            request.state === 'done' ? 'bg-secondary' : 'bg-warning'\r\n                        }`}>                        <div className=\"card-body\">\r\n                            <div className='row'>\r\n                                <div className=' col-6'>\r\n                                    <Link\r\n                                        onClick={() => handleRequestClick(request)}\r\n                                        className=\"request-link\"\r\n                                    >\r\n                                        <p className=\"card-text\">{translate('post.topics', language)}: {request.topics.join(', ')}</p>\r\n                                        <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {request.preferredLanguages.join(', ')}</p>\r\n                                        <p className=\"card-text\">{translate('post.levelOfStudy', language)}: {request.preferredLanguages}</p>\r\n                                        <p className=\"card-text\">{translate('post.state', language)}: {request.state}</p>\r\n                                        <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(request.startDateAndTime, language)}</p>\r\n                                        <p className=\"card-text\">{translate('post.studyDuration', language)}: {request.studyDuration.min} - {request.studyDuration.max} {translate('general.minutes', language)} </p>\r\n                                        <p className=\"card-text\">{translate('post.description', language)}: {request.description}</p>\r\n                                    </Link>\r\n                                </div>\r\n                                {(request.state === \"open\" && request.matchesList.length !== 0) &&\r\n\r\n                                    <div className='col-3'>\r\n                                        <button className=\"  btn btn-info rounded-circle request-link\" onClick={() => handleRequestClick1(request)}\r\n                                        >{request.matchesList.length}</button>\r\n                                    </div>}\r\n                                {\r\n                                    request.state === \"close\" &&\r\n\r\n                                    <div className='col-3'>\r\n                                        <button\r\n                                            className=\"btn  request-link\"\r\n                                            onClick={() => handleRequestClickSingleUser(request)}\r\n                                        >\r\n                                            <img\r\n                                                src={request.finalChavruta.profilePic}\r\n                                                alt=\"Chavruta Profile\"\r\n                                                style={{\r\n                                                    width: '80px', // adjust the width and height as needed\r\n                                                    height: '80px',\r\n                                                    borderRadius: '50%', // this makes it a rounded circle\r\n                                                }}\r\n                                            />\r\n                                        </button>\r\n\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                        {(request.state === \"open\" || request.state === \"done\") &&\r\n                            <div className='col-6 d-flex align-items-center justify-content-center flex-column'>\r\n                                <button className=\"btn border-info border-2 mb-2\" onClick={() => clickYes(request)}>\r\n                                    Update\r\n                                </button>\r\n                                <button className=\"btn border-danger border-2\" onClick={() => clickDelete(request)}>\r\n                                    Delete\r\n                                </button>\r\n                            </div>}\r\n                        {request.state === \"close\" &&\r\n                            <div className='col-6 d-flex align-items-center justify-content-center flex-column'>\r\n                                <h3>The meeting start in </h3>\r\n                                <button className=\"btn border-info border-2 mb-2\" >\r\n                                    {calculateCountdown(request.startDateAndTime)}\r\n                                </button>\r\n                                <button className=\"btn border-danger border-2\" onClick={() => clickCancle(request)}>\r\n                                    Cancle meeting\r\n                                </button>\r\n                            </div>}\r\n\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {isCardVisible && <UserList selectedRequest={isCardVisible} onClose={handleCloseDetails1} />}\r\n            {maor && <FullRequestDetails selectedRequest={selectedRequest} onClose={handleCloseDetails} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleRequestMyProfile;\r\n","// SefariaSearch.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nfunction SefariaSearch({ selectedTopics, setSelectedTopics }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [isMouseOver, setIsMouseOver] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleInputChange = async (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n\r\n    try {\r\n      const response = await axios.get(`https://www.sefaria.org.il/api/name/${term}`);\r\n      setOptions(response.data.completions || []);\r\n    } catch (error) {\r\n      console.error('Error fetching data from Sefaria API:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddTopic = (topic) => {\r\n    if (!selectedTopics.includes(topic)) {\r\n      setSelectedTopics((prevTopics) => [...prevTopics, topic]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTopic = (topic) => {\r\n    setSelectedTopics((prevTopics) => prevTopics.filter((t) => t !== topic));\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setSearchTerm('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div >\r\n      <label>Choose Topics</label>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Type to search...\"\r\n          defaultValue={searchTerm}\r\n          onChange={handleInputChange}\r\n        />\r\n      </InputGroup>\r\n      {searchTerm && (\r\n        <ListGroup ref={dropdownRef}>\r\n          {options.map((option, index) => (\r\n            <ListGroup.Item\r\n              key={index}\r\n              action\r\n              onClick={() => handleAddTopic(option)}\r\n              style={{ cursor: 'pointer' }}\r\n            >\r\n              {option}\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SefariaSearch;\r\n","// SefariaSelectedTopics.jsx\r\nimport React, { useState } from 'react';\r\n\r\nfunction SefariaSelectedTopics({ selectedTopics, setSelectedTopics }) {\r\n  const [isMouseOver, setIsMouseOver] = useState(null);\r\n\r\n  const handleRemoveTopic = (topic) => {\r\n    setSelectedTopics((prevTopics) => prevTopics.filter((t) => t !== topic));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {selectedTopics.length > 0 && (\r\n        <div className='row'>\r\n          <div className='col-12 d-flex flex-wrap align-items-center'>\r\n            {selectedTopics.map((topic, index) => (\r\n              <button \r\n                key={index}\r\n                className='btn btn-light d-flex align-items-center m-2'\r\n                onMouseEnter={() => setIsMouseOver(topic)}\r\n                onMouseLeave={() => setIsMouseOver(null)}\r\n              >\r\n                <span className='mr-2'>{topic}</span>\r\n                {isMouseOver === topic && (\r\n                  <button\r\n                    className='btn btn-danger btn-sm'\r\n                    onMouseEnter={() => console.log('Mouse on remove icon')}\r\n                    onClick={() => handleRemoveTopic(topic)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                )}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SefariaSelectedTopics;\r\n","import React from 'react';\r\n// import Sefaria1 from '../common/sefaria1';\r\nimport SefariaSearch from '../common/sefariaSarch';\r\nimport SefariaSelectedTopics from '../common/sefariaSelectedTopics';\r\n\r\n\r\n\r\nconst FilterBarHome = ({ setMin, setMax, setStartDate, setEndDate, searchTopics, setSearchTopics, setLang }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='container-fluid col-12 bg-light'>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n                    <button\r\n                        className=\"navbar-toggler ms-auto\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarFilter\"\r\n                        aria-controls=\"navbarFilter\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <i className=\"bi bi-chevron-double-down\"></i>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarFilter\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item m-2 active\">\r\n                                <div className=\"form-group col-md-auto \">\r\n                                    <SefariaSearch selectedTopics={searchTopics} setSelectedTopics={setSearchTopics} />\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item m-2\">\r\n                                <div className=\"form-group col-md-auto \">\r\n                                    <label className=\"mr-2\" htmlFor=\"durationRange\">Min Duration</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"minDuration\" placeholder=\"Min Duration\" onChange={(e) => setMin(e.target.value)} />\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item m-2\">\r\n                                <div className=\"form-group col-md-auto \">\r\n                                    <label className=\"mr-2\" htmlFor=\"durationRange\">Max Duration</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"maxDuration\" placeholder=\"Max Duration\" onChange={(e) => setMax(e.target.value)} />\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"nav-item m-2\">\r\n                                <label className=\"mr-2\" htmlFor=\"startDate\">Start Date:</label>\r\n                                <input type=\"datetime-local\" className=\"form-control \" id=\"startDate\" onChange={(e) => setStartDate(e.target.value)} />\r\n                            </li>\r\n                            <li className=\"nav-item m-2 mx-2\">\r\n                                <label className=\"mr-2\" htmlFor=\"endDate\">End Date:</label>\r\n                                <input type=\"datetime-local\" className=\"form-control \" id=\"endDate\" onChange={(e) => setEndDate(e.target.value)} />\r\n                            </li>\r\n                            <li className=\"nav-item m-2\">\r\n                                <label className=\"mr-2\" htmlFor=\"lang\">Language:</label>\r\n                                <select className=\"form-control\" id=\"lang\" onChange={(e) => setLang(e.target.value)}>\r\n                                    <option value=\"All\">All</option>\r\n                                    <option value=\"Hebrew\">Hebrew</option>\r\n                                    <option value=\"English\">English</option>\r\n                                </select>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div className='row'>\r\n                    <SefariaSelectedTopics selectedTopics={searchTopics} setSelectedTopics={setSearchTopics} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterBarHome;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport SmallSingleRequest from '../user/smallSingleRequest';\r\nimport SingleRequestMyProfile from '../user/singleRequestMyProfile';\r\nimport FilterBarHome from './filterBarHome';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport translate from '../../utill/translator';\r\n\r\nconst oneYearFromToday = () => {\r\n    const today = new Date();\r\n    today.setFullYear(today.getFullYear() + 1);\r\n    return today;\r\n};\r\n\r\nconst RequestList = () => {\r\n    const language = useSelector((myStore) => myStore.languageSlice.language);\r\n    const [requestList, setRequestList] = useState([]);\r\n    const [response1, setResponse1] = useState([]);\r\n    const [requestListMarkedYes, setRequestListMarkedYes] = useState([]);\r\n    const [requestListMarkedNo, setRequestListMarkedNo] = useState([]);\r\n    const [filterMinDuration, setFilterMinDuration] = useState(5);\r\n    const [filterMaxDuration, setFilterMaxDuration] = useState(40);\r\n    const [filterStartDate, setFilterStartDate] = useState(Date.now());\r\n    const [filterEndDate, setFilterEndDate] = useState(oneYearFromToday);\r\n    const [searchTopics, setSearchTopics] = useState([]);\r\n    const [filterLang, setFilterLang] = useState(\"All\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    let { parameter } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n\r\n                if (!parameter) {\r\n                    parameter = \"relevantRequestsList\";\r\n                }\r\n\r\n                let url = API_URL + `/studyRequests/${parameter}/?reverse=yes`;\r\n\r\n                // Apply filters\r\n                url += `&minDuration=${filterMinDuration}&maxDuration=${filterMaxDuration}`;\r\n                url += `&startDate=${new Date(filterStartDate).toISOString()}&endDate=${new Date(filterEndDate).toISOString()}`;\r\n                url += `&lang=${filterLang}`;\r\n                let method;\r\n                if (parameter === \"relevantRequestsList\") {\r\n                    method = \"POST\";\r\n                } else {\r\n                    method = \"GET\";\r\n                }\r\n\r\n                const response = await doApiRequest(url, method, { searchTopics });\r\n                setResponse1(response);\r\n                if (response.status === 200) {\r\n                    setRequestList([...response.data.data]);\r\n                } else if (response.status === 201) {\r\n                    if (parameter === \"marked\") {\r\n                        setRequestListMarkedYes([...response.data.data.markedYes]);\r\n                        setRequestListMarkedNo([...response.data.data.markedNo]);\r\n                        console.log(\"marked yes and no\");\r\n                        console.log(response.data.data.markedYes);\r\n                        console.log(response.data.data.markedNo);\r\n                    }\r\n                } else if (response.status === 404) {\r\n                    setRequestList([]);\r\n                }\r\n\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [parameter, filterMinDuration, filterMaxDuration, filterStartDate, filterEndDate, searchTopics, filterLang]);\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <FilterBarHome\r\n                setMin={setFilterMinDuration}\r\n                setMax={setFilterMaxDuration}\r\n                setStartDate={setFilterStartDate}\r\n                setEndDate={setFilterEndDate}\r\n                searchTopics={searchTopics}\r\n                setSearchTopics={setSearchTopics}\r\n                setLang={setFilterLang}\r\n            />\r\n            <div className='container'>\r\n                {loading ? (\r\n                    <div className='container align-items-center mt-5'>\r\n                        <div className='text-center'>\r\n                            <div className=\"d-flex align-items-center justify-content-center\">\r\n                                <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"visually-hidden\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : parameter === \"userProfile\" ? (\r\n                    <div>\r\n                        {requestList.length === 0 ? (\r\n                            <div className='container  align-items-center mt-5'>\r\n                                <div className='text-center'>\r\n                                    <h4 className='display-4'>No requests</h4>\r\n                                </div>\r\n                            </div>) : (\r\n                            <SingleRequestMyProfile requests={requestList} type={\"requestList\"} />\r\n                        )}\r\n                    </div>\r\n                ) : response1.status === 201 ? (\r\n                    <div>\r\n                        {requestListMarkedYes.length === 0 && requestListMarkedNo.length === 0 && (\r\n                            <div className='container  align-items-center mt-5'>\r\n                                <div className='text-center'>\r\n                                    <h4 className='display-4'>No request marked</h4>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {requestListMarkedYes.length !== 0 && (\r\n                            <div>\r\n                                <h2>{translate('post.markedYes', language)}</h2>\r\n                                <SmallSingleRequest requests={requestListMarkedYes} type={\"requestListMarkedYes\"} />\r\n                            </div>\r\n                        )}\r\n\r\n                        {requestListMarkedNo.length !== 0 ? (\r\n                            <div>\r\n                                <h2>{translate('post.markedNo', language)}</h2>\r\n                                <SmallSingleRequest requests={requestListMarkedNo} type={\"requestListMarkedNo\"} />\r\n                            </div>\r\n                        ) : <p></p>}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        {requestList.length === 0 ? (\r\n                            <div className='container  align-items-center mt-5'>\r\n                                <div className='text-center'>\r\n                                    <h4 className='display-4'>No requests</h4>\r\n                                </div>\r\n                            </div>) : (\r\n                            <SmallSingleRequest requests={requestList} type={\"requestList\"} />\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RequestList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport {formatDate} from '../../utill/dateFormat'\r\nimport { useSelector } from 'react-redux';\r\nimport translate from '../../utill/translator';\r\n\r\nconst FullRequestDetails = ({ selectedRequest, onClose }) => {\r\n\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  if (!selectedRequest) {\r\n    return null; // Don't render anything if no request is selected\r\n  }\r\n  const clickYes = async (_data) => {\r\n    try {\r\n      const url = API_URL + `/event/markYes/${selectedRequest._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        window.location.reload();\r\n        console.log(\"added to yes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <div className=\"container mt-4\">\r\n          <div>\r\n            {localStorage.getItem(\"USER_ID\") !== selectedRequest.userId._id && (\r\n              <div className='row'>\r\n                <div className='col-8'>\r\n                <Link\r\n                  key={selectedRequest.userId._id}\r\n                  to={localStorage.getItem(\"ROLE\") === \"admin\" ? `/admin/singleUserAdmin/${selectedRequest.userId._id}` : `/user/singleUser/${selectedRequest.userId._id}`}\r\n                  className=\"list-group-item list-group-item-action\"\r\n                >\r\n                  <h1>{selectedRequest.userId.firstName} {selectedRequest.userId.lastName}</h1>\r\n                </Link>\r\n                </div>\r\n                <div className='col-4'>\r\n                <img\r\n                  src={selectedRequest.userId.profilePic}\r\n                  alt={selectedRequest.userId.profilePic}\r\n                  style={{\r\n                    width: '80px', // adjust the width and height as needed\r\n                    height: '80px',\r\n                    borderRadius: '50%', // this makes it a rounded circle\r\n                  }}\r\n                />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"card-text\">{translate('post.topics', language)}: {selectedRequest.topics.join(', ')}</p>\r\n            <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {selectedRequest.preferredLanguages.join(', ')}</p>\r\n            <p className=\"card-text\">{translate('post.levelOfStudy', language)}: {selectedRequest.preferredLanguages}</p>\r\n            <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(selectedRequest.startDateAndTime, language)}</p>\r\n            <p className=\"card-text\">{translate('post.studyDuration', language)}: {selectedRequest.studyDuration.min} - {selectedRequest.studyDuration.max} {translate('general.minutes', language)} </p>\r\n            <p className=\"card-text\">{translate('post.description', language)}: {selectedRequest.description}</p>\r\n          \r\n\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n              {localStorage.getItem(\"USER_ID\") !== selectedRequest.userId._id && (\r\n                <button className=\"btn btn-success mx-3\" onClick={() => clickYes(selectedRequest)}>\r\n                  {translate('post.yes', language)}\r\n                </button>\r\n              )}\r\n              <button className=\"btn btn-danger mx-3\" onClick={onClose}>\r\n              {translate('post.close', language)}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullRequestDetails;\r\n","import { Link } from 'react-router-dom';\r\nimport FullRequestDetails from './singleRequest';\r\nimport { useSelector } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserList from './userList';\r\nimport { formatDate } from '../../utill/dateFormat'\r\nimport translate from '../../utill/translator';\r\n\r\n\r\n\r\nconst SmallSingleRequest = ({ requests, type, stateRequest }) => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  if (!stateRequest) {\r\n    stateRequest = \"open\";\r\n  }\r\n  const [isCardVisible, setIsCardVisible] = useState(null);\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [maor, setMaor] = useState(true);\r\n  const nav = useNavigate();\r\n\r\n  const closeDone = {\r\n    // backgroundColor: '#ffcccc',\r\n    border: '5px solid #ffcccc', // Add a 5px black border\r\n\r\n  };\r\n  const open = {\r\n    // backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n    // backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n    border: '5px solid #ccffcc', // Add a 5px black border\r\n  };\r\n\r\n  // const open = {\r\n  //   backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n  // };\r\n  const past = {\r\n    // backgroundColor: '#e0e0e0', // Replace with your actual pink color code\r\n    border: '5px solid #e0e0e0', // Add a 5px black border\r\n\r\n    // backgroundColor: '#e0e0e0', // Replace with your actual pink color code\r\n  };\r\n  const handleRequestClick = (request) => {\r\n    setSelectedRequest(request);\r\n    setMaor(true);\r\n  };\r\n\r\n  const handleRequestClick1 = (request) => {\r\n    setIsCardVisible(request);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setSelectedRequest(null);\r\n  };\r\n\r\n  console.log(\"requests\", requests);\r\n  const handleRequestClickSingleUser = (request) => {\r\n\r\n    nav(`/user/singleUser/${request.finalChavruta._id}`, { replace: true })\r\n\r\n  };\r\n  const handleCloseDetails1 = () => {\r\n    setIsCardVisible(null);\r\n    window.location.reload()\r\n  };\r\n  const clickDelete = async (request) => {\r\n    try {\r\n      const url = API_URL + `/studyRequests/${request._id}`;\r\n      const data = await doApiRequest(url, \"DELETE\");\r\n      if (data.status === 204) {\r\n\r\n        window.location.reload();\r\n        console.log(\"deleted\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredRequestList = requests.filter((request) => {\r\n    const topicsString = request.topics.join(' '); // Convert the topics array to a string\r\n    return (\r\n      // topicsString.toLowerCase().includes(searchV.toLowerCase()) &&\r\n      request.state === stateRequest\r\n    );\r\n  });\r\n\r\n\r\n\r\n  const clickYes = async (request) => {\r\n    try {\r\n      const url = API_URL + `/event/markYes/${request._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        console.log(\"added to yes\");\r\n        window.location.reload()\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const clickNo = async (request) => {\r\n    try {\r\n      setMaor(false)\r\n      setSelectedRequest(request);\r\n      console.log(request);\r\n      const url = API_URL + `/event/markNo/${request._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        console.log(\"no\");\r\n        window.location.reload()\r\n      }\r\n      setMaor(true)\r\n      setSelectedRequest(null);\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n  const getRequestClass = (state) => {\r\n    switch (state) {\r\n      case 'open':\r\n        return 'border border-4 border-info';\r\n      case 'close':\r\n        return 'border border-4 border-success ';\r\n      case 'done':\r\n        return 'border border-4 border-secondary ';\r\n      case 'past':\r\n        return 'bg-secondary ';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      {filteredRequestList.map((request) => (\r\n        <div key={request._id} className={`col-md-4 mb-4 position-relative }`}>\r\n          <div className=\"card d-flex flex-column h-100\"\r\n          //  style={\r\n          //   request.state === 'open'\r\n          //     ? open\r\n          //     : request.state === 'close' || request.state === 'done'\r\n          //       ? closeDone\r\n          //       : past\r\n          >\r\n\r\n            <div className={`card-body ${getRequestClass(request.state)}`}>\r\n\r\n              <Link\r\n                onClick={() => handleRequestClick(request)}\r\n                className=\"request-link\"\r\n              >\r\n                <p className='card-text'><strong>{request.userId.firstName} {request.userId.lastName}</strong></p>\r\n                <p className=\"card-text\">{translate('post.topics', language)}: {request.topics.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {request.preferredLanguages.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.state', language)}: {request.state}</p>\r\n                <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(request.startDateAndTime, language)}</p>\r\n                <p className=\"card-text\">{translate('post.studyDuration', language)}: {request.studyDuration.min} - {request.studyDuration.max} {translate('general.minutes', language)} </p>\r\n                <p className=\"card-text\">{translate('post.description', language)}: {request.description}</p>\r\n              </Link>\r\n              <div className=\"mt-auto\">\r\n                <div className=\"d-flex justify-content-center mt-5\">\r\n                  {(type === \"requestListMarkedNo\" || type === \"requestList\") && (\r\n                    <button className=\"btn btn-outline-success mx-3\" onClick={() => clickYes(request)}>\r\n                      {translate('post.yes', language)}\r\n                    </button>\r\n                  )}\r\n\r\n                  {(type === \"requestListMarkedYes\" || type === \"requestList\") && (\r\n                    <button className=\"btn btn-outline-danger mx-3\" onClick={() => clickNo(request)}>\r\n                      {translate('post.no', language)}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n\r\n\r\n              {(type === \"myRequests\" && (request.state === \"open\" && request.matchesList.length !== 0) &&\r\n                <div className='position-absolute top-0 end-0 mt-2 me-2'>\r\n                  <button className=\" btn-lightblue\" onClick={() => handleRequestClick1(request)}>\r\n                    {request.matchesList.length}\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <div className=\"mt-auto\">\r\n                <div className=\"d-flex justify-content-center my-3\">\r\n                  {(type === \"myRequests\") &&\r\n                    (request.zoomLink ?\r\n                      <a className='btn btn-warning' href={request.zoomLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                         {translate('post.startMeeting', language)}\r\n                      </a> :\r\n                      (request.state === 'close') ?\r\n                        <button className='btn btn-danger' onClick={() => clickDelete(request)}>Cancel meeting</button> :\r\n                        <button className='btn btn-danger' onClick={() => clickDelete(request)}>Delete</button>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))\r\n        // )\r\n      }\r\n\r\n      {maor && <FullRequestDetails selectedRequest={selectedRequest} typeList={type} onClose={handleCloseDetails} />}\r\n      {isCardVisible && <UserList selectedRequest={isCardVisible} onClose={handleCloseDetails1} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallSingleRequest;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport translate from '../../utill/translator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserList = ({ selectedRequest, onClose }) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n    useEffect(() => {\r\n        if (!selectedRequest) {\r\n            return; \r\n        }\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const url = API_URL + `/studyRequests/matchUsers/${selectedRequest._id}`;\r\n                console.log(url);\r\n                const response = await doApiRequest(url, 'GET');\r\n                console.log(\"response\", response);\r\n                if (response.status === 200) {\r\n                    setUserList([...response.data.data]);\r\n                }\r\n                console.log(\"userList\", userList);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    if (!selectedRequest) {\r\n        return null; \r\n    }\r\n    const clickYesUser = async (user) => {\r\n        console.log(\"yes user\",user);\r\n        try {\r\n            const url = API_URL + `/event/finalizeRequest/${user._id}/${selectedRequest._id}/`;\r\n            const data = await doApiRequest(url, \"POST\");\r\n            if (data.status === 200) {\r\n                onClose();\r\n                alert(\"match created\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n    const clickNo = async (user) => {\r\n        try {\r\n            const url = API_URL + `/event/markNoToUser/${selectedRequest._id}/${user._id}`;\r\n            const data = await doApiRequest(url, \"POST\");\r\n            if (data.status === 200) {\r\n                onClose();\r\n                console.log(\"no\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-container\">\r\n                <div className=\"container mt-4 col-12 \">\r\n                    <h2 className=\"mb-4\">User List</h2>\r\n                    <ul className=\"list-group\">\r\n                        {userList.map((user) => (\r\n                            <div key={user._id} className=\"d-flex justify-content-between align-items-center mb-1\">\r\n                                <Link\r\n                                    to={`/user/singleUser/${user._id}`} // Adjust the route as needed\r\n                                    className=\"list-group-item list-group-item-action\"\r\n                                >\r\n                                     {user.firstName} {user.lastName} \r\n                                </Link>\r\n                                <button className=\"btn border-success border-2 ms-5 me-2\" onClick={() => clickYesUser(user)}>\r\n                                {translate('post.yes', language)}\r\n                                </button>\r\n                                <button className=\"btn btn-danger\" onClick={() => clickNo(user)}>\r\n                                {translate('post.no', language)}\r\n                                </button>\r\n                              \r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={onClose}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","const formatDate = (dateTimeString, language) => {\r\n  const date = new Date(dateTimeString);\r\n\r\n  const options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  };\r\n\r\n  const locale = language === 'he' ? 'he-IL' : undefined;\r\n\r\n  const formattedDate = date.toLocaleDateString(locale, options);\r\n\r\n  return `${formattedDate}`;\r\n};\r\n\r\nexport { formatDate };\r\n","// translator.js\r\nimport enTranslations from '../locals/en.json';\r\nimport heTranslations from '../locals/he.json';\r\n\r\nconst translations = {\r\n  en: enTranslations,\r\n  he: heTranslations,\r\n};\r\n\r\nconst translate = (key, lang) => {\r\n  const keys = key.split('.');\r\n  let currentTranslation = translations[lang];\r\n\r\n  for (const k of keys) {\r\n    if (!currentTranslation || !currentTranslation[k]) {\r\n      return key; // Return the key itself if translation not found\r\n    }\r\n    currentTranslation = currentTranslation[k];\r\n  }\r\n\r\n  return currentTranslation;\r\n};\r\n\r\nexport default translate;\r\n"],"names":["_ref","requests","isCardVisible","setIsCardVisible","useState","selectedRequest","setSelectedRequest","searchV","useSelector","myStore","searchSlice","searchValue","language","languageSlice","nav","useNavigate","filteredRequestList","filter","request","topics","join","toLowerCase","includes","calculateCountdown","startDateAndTime","currentTime","Date","console","log","timeDifference","isNaN","error","days","Math","floor","hours","minutes","seconds","concat","_jsxs","className","children","map","_jsx","state","Link","onClick","handleRequestClick","translate","preferredLanguages","formatDate","studyDuration","min","max","description","matchesList","length","handleRequestClick1","finalChavruta","_id","replace","handleRequestClickSingleUser","src","profilePic","alt","style","width","height","borderRadius","async","window","location","reload","clickYes","url","API_URL","doApiRequest","status","clickDelete","clickCancle","UserList","onClose","handleCloseDetails1","FullRequestDetails","handleCloseDetails","selectedTopics","setSelectedTopics","searchTerm","setSearchTerm","options","setOptions","isMouseOver","setIsMouseOver","dropdownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","InputGroup","FormControl","placeholder","defaultValue","onChange","term","e","value","response","axios","get","data","completions","ListGroup","ref","option","index","Item","action","handleAddTopic","topic","prevTopics","cursor","onMouseEnter","onMouseLeave","t","handleRemoveTopic","setMin","setMax","setStartDate","setEndDate","searchTopics","setSearchTopics","setLang","type","id","SefariaSearch","htmlFor","SefariaSelectedTopics","oneYearFromToday","today","setFullYear","getFullYear","RequestList","requestList","setRequestList","response1","setResponse1","requestListMarkedYes","setRequestListMarkedYes","requestListMarkedNo","setRequestListMarkedNo","filterMinDuration","setFilterMinDuration","filterMaxDuration","setFilterMaxDuration","filterStartDate","setFilterStartDate","now","filterEndDate","setFilterEndDate","filterLang","setFilterLang","loading","setLoading","parameter","useParams","method","toISOString","markedYes","markedNo","fetchData","FilterBarHome","role","SingleRequestMyProfile","SmallSingleRequest","localStorage","getItem","userId","to","firstName","lastName","stateRequest","maor","setMaor","getRequestClass","clickNo","zoomLink","href","rel","typeList","userList","setUserList","user","alert","clickYesUser","dateTimeString","locale","undefined","formattedDate","toLocaleDateString","year","month","day","hour","minute","translations","en","he","key","lang","keys","split","currentTranslation","k"],"sourceRoot":""}