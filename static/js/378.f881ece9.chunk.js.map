{"version":3,"file":"static/js/378.f881ece9.chunk.js","mappings":"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","sources":["components/common/sefaria.js","utill/translator.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { ListGroup, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport translate from '../../utill/translator';\r\n\r\nfunction Sefaria({selectedTopics, setSelectedTopics}) {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [isMouseOver, setIsMouseOver] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleInputChange = async (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n\r\n    try {\r\n      const response = await axios.get(`https://www.sefaria.org.il/api/name/${term}`);\r\n      setOptions(response.data.completions || []);\r\n    } catch (error) {\r\n      console.error('Error fetching data from Sefaria API:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddTopic = (topic) => {\r\n    if (!selectedTopics.includes(topic)) {\r\n      setSelectedTopics((prevTopics) => [...prevTopics, topic]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveTopic = (topic) => {\r\n    setSelectedTopics((prevTopics) => prevTopics.filter((t) => t !== topic));\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setSearchTerm('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-6 text-start'>\r\n      <h5>{translate('post.chooseTopics', language)}</h5>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder= {translate('post.typeSearch', language)}\r\n            defaultValue={searchTerm}\r\n            onChange={handleInputChange}\r\n          />\r\n        </InputGroup>\r\n        {searchTerm && (\r\n          <ListGroup ref={dropdownRef}>\r\n            {options.map((option, index) => (\r\n              <ListGroup.Item\r\n                key={index}\r\n                action\r\n                onClick={() => handleAddTopic(option)}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                {option}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </div>\r\n      <div className='col-6'>\r\n        {selectedTopics.length > 0 && (\r\n          <div>\r\n            <h5>{translate('post.selectedTopics', language)}:</h5>\r\n            <ListGroup>\r\n              {selectedTopics.map((topic, index) => (\r\n                <ListGroup.Item\r\n                  key={index}\r\n                  onMouseEnter={() => setIsMouseOver(topic)}\r\n                  onMouseLeave={() => setIsMouseOver(null)}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  {topic}{' '}\r\n                  {isMouseOver === topic && (\r\n                    <button\r\n                      className='btn btn-danger'\r\n                      style={{ fontSize: '6px' }}\r\n                      onMouseEnter={() => console.log('Mouse on remove icon')}\r\n                      onClick={() => handleRemoveTopic(topic)}\r\n                    >\r\n                      X\r\n                    </button>\r\n\r\n                  )}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sefaria;\r\n","// translator.js\r\nimport enTranslations from '../locals/en.json';\r\nimport heTranslations from '../locals/he.json';\r\n\r\nconst translations = {\r\n  en: enTranslations,\r\n  he: heTranslations,\r\n};\r\n\r\nconst translate = (key, lang) => {\r\n  const keys = key.split('.');\r\n  let currentTranslation = translations[lang];\r\n\r\n  for (const k of keys) {\r\n    if (!currentTranslation || !currentTranslation[k]) {\r\n      return key; // Return the key itself if translation not found\r\n    }\r\n    currentTranslation = currentTranslation[k];\r\n  }\r\n\r\n  return currentTranslation;\r\n};\r\n\r\nexport default translate;\r\n"],"names":["_ref","selectedTopics","setSelectedTopics","language","useSelector","myStore","languageSlice","searchTerm","setSearchTerm","useState","options","setOptions","isMouseOver","setIsMouseOver","dropdownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","_jsxs","className","children","_jsx","translate","InputGroup","FormControl","placeholder","defaultValue","onChange","async","term","e","value","response","axios","get","concat","data","completions","error","console","ListGroup","ref","map","option","index","Item","action","onClick","handleAddTopic","topic","includes","prevTopics","style","cursor","length","onMouseEnter","onMouseLeave","fontSize","log","filter","t","handleRemoveTopic","translations","en","he","key","lang","keys","split","currentTranslation","k"],"sourceRoot":""}