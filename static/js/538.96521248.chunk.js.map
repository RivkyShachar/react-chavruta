{"version":3,"file":"static/js/538.96521248.chunk.js","mappings":"0LAMA,MA0DA,EA1D6BA,IAAiB,IAAhB,OAAEC,GAAQD,EACpC,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GACvC,IAAI,UAAEK,IAAcC,EAAAA,EAAAA,MA6BpB,OA3BAC,EAAAA,EAAAA,YAAU,KACYC,WACd,IACIJ,GAAW,GAEXK,QAAQC,IAAI,YAAaL,GAEzB,MAAMM,EAAMC,EAAAA,GAAO,kCAAAC,OAAqCR,GAClDS,QAAiBC,EAAAA,EAAAA,IAAaJ,EAAK,OACzCT,EAAaY,GACbL,QAAQC,IAAI,WAAYI,GACA,MAApBA,EAASE,OACTjB,EAAe,IAAIe,EAASG,KAAKA,OACN,MAApBH,EAASE,QAChBjB,EAAe,IAGnBK,GAAW,EACf,CAAE,MAAOc,GACLT,QAAQS,MAAM,uBAAwBA,GACtCd,GAAW,EACf,GAGJe,EAAW,GACZ,KAGCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACrBnB,GACGiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,UAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC7DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBE,KAAK,SAAQD,UACzCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBC,SAAC,uBAK3B,IAAvBxB,EAAY0B,QACZJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UAC/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SAAC,qBAIlCF,EAAAA,EAAAA,KAACK,EAAAA,EAAkB,CAACC,SAAU5B,EAAa6B,KAAM,iBAEnD,C,yGCrDd,MA2EA,EA3E2B/B,IAAmC,IAAlC,gBAAEgC,EAAe,QAAEC,GAASjC,EAEtD,MAAMkC,GAAWC,EAAAA,EAAAA,KAAaC,GAAYA,EAAQC,cAAcH,WAEhE,IAAKF,EACH,OAAO,KAeT,OACER,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BY,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,CACGa,aAAaC,QAAQ,aAAeR,EAAgB/B,OAAOwC,MAC1DH,EAAAA,EAAAA,MAAA,OAAKb,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACtBF,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAEHC,GAAqC,UAAjCJ,aAAaC,QAAQ,QAAmB,0BAAAvB,OAA6Be,EAAgB/B,OAAOwC,KAAG,oBAAAxB,OAAyBe,EAAgB/B,OAAOwC,KACnJhB,UAAU,yCAAwCC,UAElDY,EAAAA,EAAAA,MAAA,MAAAZ,SAAA,CAAKM,EAAgB/B,OAAO2C,UAAU,IAAEZ,EAAgB/B,OAAO4C,aAJ1Db,EAAgB/B,OAAOwC,QAO9BjB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACtBF,EAAAA,EAAAA,KAAA,OACEsB,IAAKd,EAAgB/B,OAAO8C,WAC5BC,IAAKhB,EAAgB/B,OAAO8C,WAC5BE,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,aAAc,eAOtBd,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,cAAenB,GAAU,KAAGF,EAAgBsB,OAAOC,KAAK,UAC5FjB,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,0BAA2BnB,GAAU,KAAGF,EAAgBwB,mBAAmBD,KAAK,UACpHjB,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,oBAAqBnB,GAAU,KAAGF,EAAgBwB,uBACtFlB,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,iBAAkBnB,GAAU,MAAGuB,EAAAA,EAAAA,GAAWzB,EAAgB0B,iBAAkBxB,OAChHI,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,qBAAsBnB,GAAU,KAAGF,EAAgB2B,cAAcC,IAAI,MAAI5B,EAAgB2B,cAAcE,IAAI,KAAER,EAAAA,EAAAA,GAAU,kBAAmBnB,GAAU,QACxLI,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,mBAAoBnB,GAAU,KAAGF,EAAgB8B,gBAGrFxB,EAAAA,EAAAA,MAAA,OAAKb,UAAU,qCAAoCC,SAAA,CAChDa,aAAaC,QAAQ,aAAeR,EAAgB/B,OAAOwC,MAC1DjB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,uBAAuBsC,QAASA,IArD/CnD,WACf,IACE,MAAMG,EAAMC,EAAAA,GAAO,kBAAAC,OAAqBe,EAAgBS,KAEpC,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,SAC5BK,SACP4C,OAAOC,SAASC,SAChBrD,QAAQC,IAAI,gBAEhB,CAAE,MAAOQ,GACPT,QAAQS,MAAM,QAASA,EACzB,GA2CoE6C,GAA0BzC,UAC/E2B,EAAAA,EAAAA,GAAU,WAAYnB,MAG3BV,EAAAA,EAAAA,KAAA,UAAQC,UAAU,sBAAsBsC,QAAS9B,EAAQP,UACxD2B,EAAAA,EAAAA,GAAU,aAAcnB,gBAM7B,C,wIClEV,MA6MA,EA7M2BlC,IAAuC,IAAtC,SAAE8B,EAAQ,KAAEC,EAAI,aAAEqC,GAAcpE,EAC1D,MAAMkC,GAAWC,EAAAA,EAAAA,KAAaC,GAAYA,EAAQC,cAAcH,WAE3DkC,IACHA,EAAe,QAEjB,MAAOC,EAAeC,IAAoBlE,EAAAA,EAAAA,UAAS,OAC5C4B,EAAiBuC,IAAsBnE,EAAAA,EAAAA,UAAS,OAChDoE,EAAMC,IAAWrE,EAAAA,EAAAA,WAAS,IACrBsE,EAAAA,EAAAA,MAmCZ7D,QAAQC,IAAI,WAAYgB,GACxB,MASM6C,EAAc/D,UAClB,IACE,MAAMG,EAAMC,EAAAA,GAAO,kBAAAC,OAAqB2D,EAAQnC,KAE5B,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,WAC5BK,SAEP4C,OAAOC,SAASC,SAChBrD,QAAQC,IAAI,WAEhB,CAAE,MAAOQ,GACPT,QAAQS,MAAM,QAASA,EACzB,GAIIuD,EAAsB/C,EAASgD,QAAQF,IACtBA,EAAQtB,OAAOC,KAAK,KACzC,OAEEqB,EAAQG,QAAUX,CAAY,IAqC5BY,EAAmBD,IACvB,OAAQA,GACN,IAAK,OACH,MAAO,8BACT,IAAK,QACH,MAAO,kCACT,IAAK,OACH,MAAO,oCACT,IAAK,OACH,MAAO,gBACT,QACE,MAAO,GACX,EAEF,OACEzC,EAAAA,EAAAA,MAAA,OAAKb,UAAU,WAAUC,SAAA,CACtBmD,EAAoBI,KAAKL,IACxBpD,EAAAA,EAAAA,KAAA,OAAuBC,UAAS,oCAAsCC,UACpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAMfC,UAGEY,EAAAA,EAAAA,MAAA,OAAKb,UAAS,aAAAR,OAAe+D,EAAgBJ,EAAQG,QAASrD,SAAA,EAE5DY,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHqB,QAASA,IA7GKa,KAC1BL,EAAmBK,GACnBH,GAAQ,EAAK,EA2GcS,CAAmBN,GAClCnD,UAAU,eAAcC,SAAA,EAExBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,UAACY,EAAAA,EAAAA,MAAA,UAAAZ,SAAA,CAASkD,EAAQ3E,OAAO2C,UAAU,IAAEgC,EAAQ3E,OAAO4C,eAC5EP,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,cAAenB,GAAU,KAAG0C,EAAQtB,OAAOC,KAAK,UACpFjB,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,0BAA2BnB,GAAU,KAAG0C,EAAQpB,mBAAmBD,KAAK,UAC5GjB,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,aAAcnB,GAAU,KAAG0C,EAAQG,UACvEzC,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,iBAAkBnB,GAAU,MAAGuB,EAAAA,EAAAA,GAAWmB,EAAQlB,iBAAkBxB,OACxGI,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,qBAAsBnB,GAAU,KAAG0C,EAAQjB,cAAcC,IAAI,MAAIgB,EAAQjB,cAAcE,IAAI,KAAER,EAAAA,EAAAA,GAAU,kBAAmBnB,GAAU,QACxKI,EAAAA,EAAAA,MAAA,KAAGb,UAAU,YAAWC,SAAA,EAAE2B,EAAAA,EAAAA,GAAU,mBAAoBnB,GAAU,KAAG0C,EAAQd,mBAE/EtC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBY,EAAAA,EAAAA,MAAA,OAAKb,UAAU,qCAAoCC,SAAA,EACtC,wBAATK,GAA2C,gBAATA,KAClCP,EAAAA,EAAAA,KAAA,UAAQC,UAAU,+BAA+BsC,QAASA,IA3E3DnD,WACf,IACE,MAAMG,EAAMC,EAAAA,GAAO,kBAAAC,OAAqB2D,EAAQnC,KAE5B,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,SAC5BK,SACPP,QAAQC,IAAI,gBACZkD,OAAOC,SAASC,SAEpB,CAAE,MAAO5C,GACPT,QAAQS,MAAM,QAASA,EACzB,GAiEgF6C,CAASS,GAASlD,UAC/E2B,EAAAA,EAAAA,GAAU,WAAYnB,MAIhB,yBAATH,GAA4C,gBAATA,KACnCP,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA8BsC,QAASA,IAnE3DnD,WACd,IACE6D,GAAQ,GACRF,EAAmBK,GACnB/D,QAAQC,IAAI8D,GACZ,MAAM7D,EAAMC,EAAAA,GAAO,iBAAAC,OAAoB2D,EAAQnC,KAE3B,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,SAC5BK,SACPP,QAAQC,IAAI,MACZkD,OAAOC,SAASC,UAElBO,GAAQ,GACRF,EAAmB,KACrB,CAAE,MAAOjD,GACPT,QAAQS,MAAM,QAASA,EACzB,GAoD+E6D,CAAQP,GAASlD,UAC7E2B,EAAAA,EAAAA,GAAU,UAAWnB,UAUnB,eAATH,GAA4C,SAAlB6C,EAAQG,OAAmD,IAA/BH,EAAQQ,YAAYxD,SAC1EJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,UACtDF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBsC,QAASA,IAzI/Ba,KAC3BN,EAAiBM,EAAQ,EAwIuCS,CAAoBT,GAASlD,SAC5EkD,EAAQQ,YAAYxD,YAI3BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,SACtC,eAATK,IACC6C,EAAQU,UACP9D,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAkB8D,KAAMX,EAAQU,SAAUE,OAAO,SAASC,IAAI,sBAAqB/D,UAC5F2B,EAAAA,EAAAA,GAAU,oBAAqBnB,KAEhB,UAAlB0C,EAAQG,OACPvD,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBsC,QAASA,IAAMY,EAAYC,GAASlD,SAAC,oBACxEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBsC,QAASA,IAAMY,EAAYC,GAASlD,SAAC,sBA5D9EkD,EAAQnC,OAwEnB+B,IAAQhD,EAAAA,EAAAA,KAACkE,EAAAA,EAAkB,CAAC1D,gBAAiBA,EAAiB2D,SAAU5D,EAAME,QA/JxD2D,KACzBrB,EAAmB,KAAK,IA+JrBF,IAAiB7C,EAAAA,EAAAA,KAACqE,EAAAA,EAAQ,CAAC7D,gBAAiBqC,EAAepC,QAtJpC6D,KAC1BxB,EAAiB,MACjBN,OAAOC,SAASC,QAAQ,MAqJlB,C,iGC/MV,MA4FA,EA5FiBlE,IAAmC,IAAlC,gBAAEgC,EAAe,QAAEC,GAASjC,EAC1C,MAAO+F,EAAUC,IAAe5F,EAAAA,EAAAA,UAAS,IACnC8B,GAAWC,EAAAA,EAAAA,KAAaC,GAAYA,EAAQC,cAAcH,WA0BhE,IAxBAvB,EAAAA,EAAAA,YAAU,KACN,IAAKqB,EACD,OAGcpB,WACd,IACI,MAAMG,EAAMC,EAAAA,GAAO,6BAAAC,OAAgCe,EAAgBS,KACnE5B,QAAQC,IAAIC,GACZ,MAAMG,QAAiBC,EAAAA,EAAAA,IAAaJ,EAAK,OACzCF,QAAQC,IAAI,WAAYI,GACA,MAApBA,EAASE,QACT4E,EAAY,IAAI9E,EAASG,KAAKA,OAElCR,QAAQC,IAAI,WAAYiF,EAC5B,CAAE,MAAOzE,GACLT,QAAQS,MAAM,uBAAwBA,EAC1C,GAGJC,EAAW,GACZ,KAGES,EACD,OAAO,KA4BX,OACIR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC1BY,EAAAA,EAAAA,MAAA,OAAKb,UAAU,kBAAiBC,SAAA,EAC5BY,EAAAA,EAAAA,MAAA,OAAKb,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMC,SAAC,eACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACrBqE,EAASd,KAAKgB,IACX3D,EAAAA,EAAAA,MAAA,OAAoBb,UAAU,yDAAwDC,SAAA,EAClFY,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACDC,GAAE,oBAAA1B,OAAsBgF,EAAKxD,KAC7BhB,UAAU,yCAAwCC,SAAA,CAEhDuE,EAAKrD,UAAU,IAAEqD,EAAKpD,aAE5BrB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,wCAAwCsC,QAASA,IAxC1EnD,WACjBC,QAAQC,IAAI,WAAWmF,GACvB,IACI,MAAMlF,EAAMC,EAAAA,GAAO,0BAAAC,OAA6BgF,EAAKxD,IAAG,KAAAxB,OAAIe,EAAgBS,IAAG,KAE3D,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,SAC5BK,SACLa,IACAiE,MAAM,iBAEd,CAAE,MAAO5E,GACLT,QAAQS,MAAM,QAASA,EAC3B,GA6BiG6E,CAAaF,GAAMvE,UAC3F2B,EAAAA,EAAAA,GAAU,WAAYnB,MAEvBV,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBsC,QAASA,IA9BxDnD,WACZ,IACI,MAAMG,EAAMC,EAAAA,GAAO,uBAAAC,OAA0Be,EAAgBS,IAAG,KAAAxB,OAAIgF,EAAKxD,KAErD,aADDtB,EAAAA,EAAAA,IAAaJ,EAAK,SAC5BK,SACLa,IACApB,QAAQC,IAAI,MAEpB,CAAE,MAAOQ,GACLT,QAAQS,MAAM,QAASA,EAC3B,GAoB0E6D,CAAQc,GAAMvE,UAC/D2B,EAAAA,EAAAA,GAAU,UAAWnB,OAXhB+D,EAAKxD,aAkB3BjB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,UAChDF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBsC,QAAS9B,EAAQP,SAAC,gBAK3D,C,kCC9Fd,MAAM+B,EAAaA,CAAC2C,EAAgBlE,KAClC,MAUMmE,EAAsB,OAAbnE,EAAoB,aAAUoE,EAEvCC,EAZO,IAAIC,KAAKJ,GAYKK,mBAAmBJ,EAV9B,CACdK,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,YAOV,MAAM,GAAN7F,OAAUsF,EAAa,C,wCCXnBQ,EAAe,CACnBC,G,+xFACAC,G,4mOAiBF,EAdkB5D,CAAC6D,EAAKC,KACtB,MAAMC,EAAOF,EAAIG,MAAM,KACvB,IAAIC,EAAqBP,EAAaI,GAEtC,IAAK,MAAMI,KAAKH,EAAM,CACpB,IAAKE,IAAuBA,EAAmBC,GAC7C,OAAOL,EAETI,EAAqBA,EAAmBC,EAC1C,CAEA,OAAOD,CAAkB,C","sources":["components/user/otherUserRequestList.js","components/user/singleRequest.js","components/user/smallSingleRequest.js","components/user/userList.js","utill/dateFormat.js","utill/translator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport SmallSingleRequest from '../user/smallSingleRequest';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst OtherUserRequestList = ({ userId }) => {\r\n    const [requestList, setRequestList] = useState([]);\r\n    const [response1, setResponse1] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    let { parameter } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n\r\n                console.log('parameter', parameter);\r\n\r\n                const url = API_URL + `/studyRequests/getUserRequests/${parameter}`;\r\n                const response = await doApiRequest(url, 'GET');\r\n                setResponse1(response);\r\n                console.log(\"response\", response);\r\n                if (response.status === 200) {\r\n                    setRequestList([...response.data.data]);\r\n                } else if (response.status === 404) {\r\n                    setRequestList([]);\r\n                }\r\n\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='container'>\r\n            {loading ? (\r\n                <div className='container align-items-center mt-5'>\r\n                    <div className='text-center'>\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                            <div className=\"spinner-border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : requestList.length === 0 ? (\r\n                <div className='container  align-items-center mt-5'>\r\n                    <div className='text-center'>\r\n                        <h4 className='display-4'>No requests</h4>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <SmallSingleRequest requests={requestList} type={\"requestList\"} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OtherUserRequestList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport {formatDate} from '../../utill/dateFormat'\r\nimport { useSelector } from 'react-redux';\r\nimport translate from '../../utill/translator';\r\n\r\nconst FullRequestDetails = ({ selectedRequest, onClose }) => {\r\n\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  if (!selectedRequest) {\r\n    return null; // Don't render anything if no request is selected\r\n  }\r\n  const clickYes = async (_data) => {\r\n    try {\r\n      const url = API_URL + `/event/markYes/${selectedRequest._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        window.location.reload();\r\n        console.log(\"added to yes\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-container\">\r\n        <div className=\"container mt-4\">\r\n          <div>\r\n            {localStorage.getItem(\"USER_ID\") !== selectedRequest.userId._id && (\r\n              <div className='row'>\r\n                <div className='col-8'>\r\n                <Link\r\n                  key={selectedRequest.userId._id}\r\n                  to={localStorage.getItem(\"ROLE\") === \"admin\" ? `/admin/singleUserAdmin/${selectedRequest.userId._id}` : `/user/singleUser/${selectedRequest.userId._id}`}\r\n                  className=\"list-group-item list-group-item-action\"\r\n                >\r\n                  <h1>{selectedRequest.userId.firstName} {selectedRequest.userId.lastName}</h1>\r\n                </Link>\r\n                </div>\r\n                <div className='col-4'>\r\n                <img\r\n                  src={selectedRequest.userId.profilePic}\r\n                  alt={selectedRequest.userId.profilePic}\r\n                  style={{\r\n                    width: '80px', // adjust the width and height as needed\r\n                    height: '80px',\r\n                    borderRadius: '50%', // this makes it a rounded circle\r\n                  }}\r\n                />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <p className=\"card-text\">{translate('post.topics', language)}: {selectedRequest.topics.join(', ')}</p>\r\n            <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {selectedRequest.preferredLanguages.join(', ')}</p>\r\n            <p className=\"card-text\">{translate('post.levelOfStudy', language)}: {selectedRequest.preferredLanguages}</p>\r\n            <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(selectedRequest.startDateAndTime, language)}</p>\r\n            <p className=\"card-text\">{translate('post.studyDuration', language)}: {selectedRequest.studyDuration.min} - {selectedRequest.studyDuration.max} {translate('general.minutes', language)} </p>\r\n            <p className=\"card-text\">{translate('post.description', language)}: {selectedRequest.description}</p>\r\n          \r\n\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n              {localStorage.getItem(\"USER_ID\") !== selectedRequest.userId._id && (\r\n                <button className=\"btn btn-success mx-3\" onClick={() => clickYes(selectedRequest)}>\r\n                  {translate('post.yes', language)}\r\n                </button>\r\n              )}\r\n              <button className=\"btn btn-danger mx-3\" onClick={onClose}>\r\n              {translate('post.close', language)}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullRequestDetails;\r\n","import { Link } from 'react-router-dom';\r\nimport FullRequestDetails from './singleRequest';\r\nimport { useSelector } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserList from './userList';\r\nimport { formatDate } from '../../utill/dateFormat'\r\nimport translate from '../../utill/translator';\r\n\r\n\r\n\r\nconst SmallSingleRequest = ({ requests, type, stateRequest }) => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n  if (!stateRequest) {\r\n    stateRequest = \"open\";\r\n  }\r\n  const [isCardVisible, setIsCardVisible] = useState(null);\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [maor, setMaor] = useState(true);\r\n  const nav = useNavigate();\r\n\r\n  const closeDone = {\r\n    // backgroundColor: '#ffcccc',\r\n    border: '5px solid #ffcccc', // Add a 5px black border\r\n\r\n  };\r\n  const open = {\r\n    // backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n    // backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n    border: '5px solid #ccffcc', // Add a 5px black border\r\n  };\r\n\r\n  // const open = {\r\n  //   backgroundColor: '#ccffcc', // Replace with your actual pink color code\r\n  // };\r\n  const past = {\r\n    // backgroundColor: '#e0e0e0', // Replace with your actual pink color code\r\n    border: '5px solid #e0e0e0', // Add a 5px black border\r\n\r\n    // backgroundColor: '#e0e0e0', // Replace with your actual pink color code\r\n  };\r\n  const handleRequestClick = (request) => {\r\n    setSelectedRequest(request);\r\n    setMaor(true);\r\n  };\r\n\r\n  const handleRequestClick1 = (request) => {\r\n    setIsCardVisible(request);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setSelectedRequest(null);\r\n  };\r\n\r\n  console.log(\"requests\", requests);\r\n  const handleRequestClickSingleUser = (request) => {\r\n\r\n    nav(`/user/singleUser/${request.finalChavruta._id}`, { replace: true })\r\n\r\n  };\r\n  const handleCloseDetails1 = () => {\r\n    setIsCardVisible(null);\r\n    window.location.reload()\r\n  };\r\n  const clickDelete = async (request) => {\r\n    try {\r\n      const url = API_URL + `/studyRequests/${request._id}`;\r\n      const data = await doApiRequest(url, \"DELETE\");\r\n      if (data.status === 204) {\r\n\r\n        window.location.reload();\r\n        console.log(\"deleted\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const filteredRequestList = requests.filter((request) => {\r\n    const topicsString = request.topics.join(' '); // Convert the topics array to a string\r\n    return (\r\n      // topicsString.toLowerCase().includes(searchV.toLowerCase()) &&\r\n      request.state === stateRequest\r\n    );\r\n  });\r\n\r\n\r\n\r\n  const clickYes = async (request) => {\r\n    try {\r\n      const url = API_URL + `/event/markYes/${request._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        console.log(\"added to yes\");\r\n        window.location.reload()\r\n      }\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const clickNo = async (request) => {\r\n    try {\r\n      setMaor(false)\r\n      setSelectedRequest(request);\r\n      console.log(request);\r\n      const url = API_URL + `/event/markNo/${request._id}`;\r\n      const data = await doApiRequest(url, \"POST\");\r\n      if (data.status === 200) {\r\n        console.log(\"no\");\r\n        window.location.reload()\r\n      }\r\n      setMaor(true)\r\n      setSelectedRequest(null);\r\n    } catch (error) {\r\n      console.error(\"error\", error);\r\n    }\r\n  };\r\n  const getRequestClass = (state) => {\r\n    switch (state) {\r\n      case 'open':\r\n        return 'border border-4 border-info';\r\n      case 'close':\r\n        return 'border border-4 border-success ';\r\n      case 'done':\r\n        return 'border border-4 border-secondary ';\r\n      case 'past':\r\n        return 'bg-secondary ';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      {filteredRequestList.map((request) => (\r\n        <div key={request._id} className={`col-md-4 mb-4 position-relative }`}>\r\n          <div className=\"card d-flex flex-column h-100\"\r\n          //  style={\r\n          //   request.state === 'open'\r\n          //     ? open\r\n          //     : request.state === 'close' || request.state === 'done'\r\n          //       ? closeDone\r\n          //       : past\r\n          >\r\n\r\n            <div className={`card-body ${getRequestClass(request.state)}`}>\r\n\r\n              <Link\r\n                onClick={() => handleRequestClick(request)}\r\n                className=\"request-link\"\r\n              >\r\n                <p className='card-text'><strong>{request.userId.firstName} {request.userId.lastName}</strong></p>\r\n                <p className=\"card-text\">{translate('post.topics', language)}: {request.topics.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.preferredLanguages', language)}: {request.preferredLanguages.join(', ')}</p>\r\n                <p className=\"card-text\">{translate('post.state', language)}: {request.state}</p>\r\n                <p className=\"card-text\">{translate('post.startDate', language)}: {formatDate(request.startDateAndTime, language)}</p>\r\n                <p className=\"card-text\">{translate('post.studyDuration', language)}: {request.studyDuration.min} - {request.studyDuration.max} {translate('general.minutes', language)} </p>\r\n                <p className=\"card-text\">{translate('post.description', language)}: {request.description}</p>\r\n              </Link>\r\n              <div className=\"mt-auto\">\r\n                <div className=\"d-flex justify-content-center mt-5\">\r\n                  {(type === \"requestListMarkedNo\" || type === \"requestList\") && (\r\n                    <button className=\"btn btn-outline-success mx-3\" onClick={() => clickYes(request)}>\r\n                      {translate('post.yes', language)}\r\n                    </button>\r\n                  )}\r\n\r\n                  {(type === \"requestListMarkedYes\" || type === \"requestList\") && (\r\n                    <button className=\"btn btn-outline-danger mx-3\" onClick={() => clickNo(request)}>\r\n                      {translate('post.no', language)}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n\r\n\r\n              {(type === \"myRequests\" && (request.state === \"open\" && request.matchesList.length !== 0) &&\r\n                <div className='position-absolute top-0 end-0 mt-2 me-2'>\r\n                  <button className=\" btn-lightblue\" onClick={() => handleRequestClick1(request)}>\r\n                    {request.matchesList.length}\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <div className=\"mt-auto\">\r\n                <div className=\"d-flex justify-content-center my-3\">\r\n                  {(type === \"myRequests\") &&\r\n                    (request.zoomLink ?\r\n                      <a className='btn btn-warning' href={request.zoomLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                         {translate('post.startMeeting', language)}\r\n                      </a> :\r\n                      (request.state === 'close') ?\r\n                        <button className='btn btn-danger' onClick={() => clickDelete(request)}>Cancel meeting</button> :\r\n                        <button className='btn btn-danger' onClick={() => clickDelete(request)}>Delete</button>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))\r\n        // )\r\n      }\r\n\r\n      {maor && <FullRequestDetails selectedRequest={selectedRequest} typeList={type} onClose={handleCloseDetails} />}\r\n      {isCardVisible && <UserList selectedRequest={isCardVisible} onClose={handleCloseDetails1} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallSingleRequest;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_URL, doApiRequest } from '../../services/apiService';\r\nimport translate from '../../utill/translator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UserList = ({ selectedRequest, onClose }) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n    useEffect(() => {\r\n        if (!selectedRequest) {\r\n            return; \r\n        }\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const url = API_URL + `/studyRequests/matchUsers/${selectedRequest._id}`;\r\n                console.log(url);\r\n                const response = await doApiRequest(url, 'GET');\r\n                console.log(\"response\", response);\r\n                if (response.status === 200) {\r\n                    setUserList([...response.data.data]);\r\n                }\r\n                console.log(\"userList\", userList);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    if (!selectedRequest) {\r\n        return null; \r\n    }\r\n    const clickYesUser = async (user) => {\r\n        console.log(\"yes user\",user);\r\n        try {\r\n            const url = API_URL + `/event/finalizeRequest/${user._id}/${selectedRequest._id}/`;\r\n            const data = await doApiRequest(url, \"POST\");\r\n            if (data.status === 200) {\r\n                onClose();\r\n                alert(\"match created\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n    const clickNo = async (user) => {\r\n        try {\r\n            const url = API_URL + `/event/markNoToUser/${selectedRequest._id}/${user._id}`;\r\n            const data = await doApiRequest(url, \"POST\");\r\n            if (data.status === 200) {\r\n                onClose();\r\n                console.log(\"no\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"modal-container\">\r\n                <div className=\"container mt-4 col-12 \">\r\n                    <h2 className=\"mb-4\">User List</h2>\r\n                    <ul className=\"list-group\">\r\n                        {userList.map((user) => (\r\n                            <div key={user._id} className=\"d-flex justify-content-between align-items-center mb-1\">\r\n                                <Link\r\n                                    to={`/user/singleUser/${user._id}`} // Adjust the route as needed\r\n                                    className=\"list-group-item list-group-item-action\"\r\n                                >\r\n                                     {user.firstName} {user.lastName} \r\n                                </Link>\r\n                                <button className=\"btn border-success border-2 ms-5 me-2\" onClick={() => clickYesUser(user)}>\r\n                                {translate('post.yes', language)}\r\n                                </button>\r\n                                <button className=\"btn btn-danger\" onClick={() => clickNo(user)}>\r\n                                {translate('post.no', language)}\r\n                                </button>\r\n                              \r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"d-flex justify-content-between mt-3\">\r\n                    <button className=\"btn btn-danger\" onClick={onClose}>\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","const formatDate = (dateTimeString, language) => {\r\n  const date = new Date(dateTimeString);\r\n\r\n  const options = {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  };\r\n\r\n  const locale = language === 'he' ? 'he-IL' : undefined;\r\n\r\n  const formattedDate = date.toLocaleDateString(locale, options);\r\n\r\n  return `${formattedDate}`;\r\n};\r\n\r\nexport { formatDate };\r\n","// translator.js\r\nimport enTranslations from '../locals/en.json';\r\nimport heTranslations from '../locals/he.json';\r\n\r\nconst translations = {\r\n  en: enTranslations,\r\n  he: heTranslations,\r\n};\r\n\r\nconst translate = (key, lang) => {\r\n  const keys = key.split('.');\r\n  let currentTranslation = translations[lang];\r\n\r\n  for (const k of keys) {\r\n    if (!currentTranslation || !currentTranslation[k]) {\r\n      return key; // Return the key itself if translation not found\r\n    }\r\n    currentTranslation = currentTranslation[k];\r\n  }\r\n\r\n  return currentTranslation;\r\n};\r\n\r\nexport default translate;\r\n"],"names":["_ref","userId","requestList","setRequestList","useState","response1","setResponse1","loading","setLoading","parameter","useParams","useEffect","async","console","log","url","API_URL","concat","response","doApiRequest","status","data","error","fetchData","_jsx","className","children","role","length","SmallSingleRequest","requests","type","selectedRequest","onClose","language","useSelector","myStore","languageSlice","_jsxs","localStorage","getItem","_id","Link","to","firstName","lastName","src","profilePic","alt","style","width","height","borderRadius","translate","topics","join","preferredLanguages","formatDate","startDateAndTime","studyDuration","min","max","description","onClick","window","location","reload","clickYes","stateRequest","isCardVisible","setIsCardVisible","setSelectedRequest","maor","setMaor","useNavigate","clickDelete","request","filteredRequestList","filter","state","getRequestClass","map","handleRequestClick","clickNo","matchesList","handleRequestClick1","zoomLink","href","target","rel","FullRequestDetails","typeList","handleCloseDetails","UserList","handleCloseDetails1","userList","setUserList","user","alert","clickYesUser","dateTimeString","locale","undefined","formattedDate","Date","toLocaleDateString","year","month","day","hour","minute","translations","en","he","key","lang","keys","split","currentTranslation","k"],"sourceRoot":""}