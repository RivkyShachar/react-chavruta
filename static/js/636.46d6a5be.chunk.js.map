{"version":3,"file":"static/js/636.46d6a5be.chunk.js","mappings":"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","sources":["components/auth/register/profileInput.js","components/auth/register/locationInput.js","components/auth/register/educationInput.js","components/auth/register/topicList.js","components/auth/register/singleRangeQ.js","components/auth/register/rangeQuestion1.js","components/auth/register/rangeQuestion2.js","components/auth/register/appRegister.js","utill/translator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFirstName, setLastName, setEmail, setPassword, setVerifyPassword, setPhoneNumber, setGender, setDateOfBirth, setProfilePic } from '../../../redux/featchers/userSlice';\r\n// import { handleUserInfo } from '../../../utill/authService';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { TOKEN_NAME } from '../../../services/apiService';\r\nimport translate from '../../../utill/translator';\r\n\r\nconst ProfileInput = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((myStore) => myStore.userSlice.user);\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n\r\n\r\n  //age over 12\r\n  const [dateOfBirth, setDateOfBirth1] = useState('');\r\n  const [validate, setValidate] = useState('false');\r\n  const [validationError, setValidationError] = useState('');\r\n  const [validatFirstName, setValidatFirstName] = useState('');\r\n  const [validatLastName, setValidatLastName] = useState('');\r\n  const [validatEmail, setValidatEmail] = useState('');\r\n  const [validatPassword, setValidatPassword] = useState('');\r\n  const [validatVerifyPassword, setValidatVerifyPassword] = useState('');\r\n  const [passwordInput, setPasswordInput] = useState('');\r\n  const [validatPhoneNumber, setValidatPhoneNumber] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //     handleUserInfo(dispatch);\r\n  // }, [dispatch]);\r\n\r\n  const handleDateChange = (e) => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(e.target.value);\r\n    const twelveYearsAgo = new Date();\r\n    twelveYearsAgo.setFullYear(currentDate.getFullYear() - 12);\r\n\r\n    setDateOfBirth1(e.target.value);\r\n\r\n    if (selectedDate > twelveYearsAgo) {\r\n      setValidationError('Birth date must be at least 12 years ago.');\r\n    } else {\r\n      setValidationError('');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //img\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const defaultImageUrl = 'https://images.pexels.com/photos/159711/books-bookstore-book-reading-159711.jpeg?auto=compress&cs=tinysrgb&w=600';\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleInputChange = (e, inputName) => {\r\n    const inputValue = e.target.value;\r\n    switch (inputName) {\r\n      case 'firstName':\r\n        if (inputValue.length < 2) {\r\n          setValidatFirstName('First name must be at least 2 characters');\r\n        } else if (inputValue.length >= 99) {\r\n          setValidatFirstName('First name must be less than 99 characters');\r\n        }\r\n        else {\r\n          dispatch(setFirstName({ firstName: inputValue }));\r\n          setValidatFirstName('');\r\n        }\r\n\r\n        break;\r\n      case 'lastName':\r\n        if (inputValue.length < 2) {\r\n          setValidatLastName('Last name must be at least 2 characters');\r\n        } else if (inputValue.length >= 99) {\r\n          setValidatLastName('Last name must be less than 99 characters');\r\n        }\r\n        else {\r\n          dispatch(setLastName({ lastName: inputValue }));\r\n          setValidatLastName('');\r\n        }\r\n\r\n        break;\r\n      case 'email':\r\n        const isValidEmail = /\\S+@\\S+\\.\\S+/.test(inputValue);\r\n        if (!isValidEmail) {\r\n          setValidatEmail('Please enter a valid email address');\r\n        } else {\r\n          dispatch(setEmail({ email: inputValue }));\r\n          setValidatEmail('');\r\n        }\r\n        break;\r\n\r\n      case 'password':\r\n        const passwordRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]{8,32}$/;\r\n        const isValidPassword = passwordRegex.test(inputValue);\r\n\r\n        if (!isValidPassword) {\r\n          setValidatPassword('Password must contain at least one uppercase letter, one lowercase letter, one digit, and be 8-32 characters long');\r\n        } else {\r\n          setPasswordInput(inputValue);\r\n          dispatch(setPassword({ password: inputValue }));\r\n          setValidatPassword('');\r\n        }\r\n        break;\r\n\r\n      case 'verifyPassword':\r\n        if (inputValue !== passwordInput) {\r\n          setValidatVerifyPassword('Passwords do not match');\r\n        } else {\r\n          dispatch(setVerifyPassword({ verifyPassword: inputValue }));\r\n          setValidatVerifyPassword('');\r\n        }\r\n        break;\r\n      case 'phoneNumber':\r\n        if (inputValue.length < 3) {\r\n          setValidatPhoneNumber('Phone number must be more than 3 digits');\r\n        } else if (inputValue.length > 12) {\r\n          setValidatPhoneNumber('Phone number must be less than 12 digits');\r\n        }\r\n        else {\r\n          dispatch(setPhoneNumber({ phoneNumber: inputValue }));\r\n          setValidatPhoneNumber('');\r\n        }\r\n        break;\r\n      case 'gender':\r\n        dispatch(setGender({ gender: inputValue }));\r\n        break;\r\n      case 'dateOfBirth':\r\n        dispatch(setDateOfBirth({ dateOfBirth: inputValue }));\r\n        break;\r\n      case 'profilePic':\r\n        dispatch(setProfilePic({ profilePic: inputValue }));\r\n        break;\r\n      // Add more cases for other input names if needed\r\n      default:\r\n        // Handle default case or do nothing\r\n        break;\r\n    }\r\n  };\r\n  //   const uploadImage = (files) => {\r\n  //     const formData = new FormData();\r\n  //     formData.append(\"file\", files[0])\r\n  //     formData.append(\"upload_preset\", \"aizrgxua\")\r\n  //     Axios.post(\"https://api.cloudinary.com/v1_1/dmxzrb6dq/image/upload\", formData).then((response) => {\r\n  //       console.log(response);)\r\n  //   }\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <div className=\"page-wrapper bg-gra-02 p-t-130 p-b-100 font-poppins container-register\">\r\n      <div className=\"wrapper wrapper--w680\">\r\n        <div className=\"card card-4\">\r\n          <div className=\"card-body\">\r\n            <form method=\"POST\">\r\n              <div className=\"row row-space\">\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <h2 className=\"title label \">\r\n                      {localStorage.getItem(TOKEN_NAME) ? \"Edit Profile\" : \"Sign up\"}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"profilePic\">\r\n                      {translate('user.profileImg', language)}\r\n                    </label>\r\n                    <div className=\"profile-pic-container m-1\">\r\n                      {selectedFile ? (\r\n                        <div>\r\n                          <img\r\n                            src={URL.createObjectURL(selectedFile)}\r\n                            alt=\"Profile\"\r\n                            className=\"profile-pic\"\r\n                          />\r\n                        </div>\r\n                      ) : user.profilePic ? (\r\n                        <img\r\n                          src={user.profilePic}\r\n                          alt=\"Profile\"\r\n                          className=\"profile-pic\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"default-profile-pic\">\r\n                          <FontAwesomeIcon icon=\"user-circle\" size=\"3x\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      id=\"profileImage\"\r\n                      onInput={(e) => {\r\n                        handleFileChange(e);\r\n                        handleInputChange(e, \"profilePic\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row row-space\">\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"firstName\">\r\n                      {translate('user.firstName', language)}\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      onInput={(e) => handleInputChange(e, \"firstName\")}\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      defaultValue={user.firstName}\r\n                    />\r\n                  </div>\r\n                  {validatFirstName && (\r\n                    <div className=\"text-danger\">{validatFirstName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"lastName\">\r\n                      {translate('user.lastName', language)}\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      onInput={(e) => handleInputChange(e, \"lastName\")}\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      defaultValue={user.lastName}\r\n                    />\r\n                  </div>\r\n                  {validatLastName && (\r\n                    <div className=\"text-danger\">{validatLastName}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row row-space\">\r\n                <div className=\"col-2\">\r\n                  <label className=\"label\" htmlFor=\"dateOfBirth\">\r\n                    {translate('user.birthDay', language)}\r\n                  </label>\r\n                  <div className=\"input-group-icon\">\r\n                    <input\r\n                      name=\"dateOfBirth\"\r\n                      className=\"input--style-4 js-datepicker\"\r\n                      type=\"date\"\r\n                      id=\"dateOfBirth\"\r\n                      defaultValue={user.dateOfBirth}\r\n                      onInput={(e) => {\r\n                        handleDateChange(e);\r\n                        handleInputChange(e, \"dateOfBirth\");\r\n                      }}\r\n                    />\r\n                    {validationError && (\r\n                      <div className=\"text-danger\">{validationError}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"gender\">\r\n                      {translate('user.gender', language)}\r\n                    </label>\r\n                    <div className=\"p-t-10\">\r\n                      <select\r\n                        className=\"input--style-4 gender-select\"\r\n                        name=\"gender\"\r\n                        defaultValue={user.gender}\r\n                        id=\"gender\"\r\n                        onInput={(e) => handleInputChange(e, \"gender\")}\r\n                        required\r\n                      >\r\n                        <option defaultValue=\"true\" disabled hidden>\r\n                          {translate('user.selectGender', language)}\r\n                        </option>\r\n                        <option defaultValue=\"true\">{translate('user.male', language)}</option>\r\n                        <option defaultValue=\"false\">{translate('user.female', language)}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row row-space\">\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"email\">\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      onInput={(e) => handleInputChange(e, \"email\")}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      defaultValue={user.email}\r\n                    />\r\n                  </div>\r\n                  {validatEmail && (\r\n                    <div className=\"text-danger\">{validatEmail}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"phoneNumber\">\r\n                      {translate('user.phoneNumber', language)}\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      onInput={(e) => handleInputChange(e, \"phoneNumber\")}\r\n                      id=\"phoneNumber\"\r\n                      defaultValue={user.phoneNumber}\r\n                    />\r\n                  </div>\r\n                  {validatPhoneNumber && (\r\n                    <div className=\"text-danger\">{validatPhoneNumber}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"password\">\r\n                      {translate('user.password', language)}\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      type=\"text\"\r\n                      name=\"password\"\r\n                      onInput={(e) => handleInputChange(e, \"password\")}\r\n                      id=\"password\"\r\n                      defaultValue={user.password}\r\n                    />\r\n                  </div>\r\n                  {validatPassword && (\r\n                    <div className=\"text-danger\">{validatPassword}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <label className=\"label\" htmlFor=\"verifyPassword\">\r\n                      {translate('user.verifyPassword', language)}\r\n                    </label>\r\n                    <input\r\n                      className=\"input--style-4\"\r\n                      type=\"text\"\r\n                      name=\"phoneNumber\"\r\n                      onInput={(e) => handleInputChange(e, \"verifyPassword\")}\r\n                      id=\"verifyPassword\"\r\n                      defaultValue={user.verifyPassword}\r\n                    />\r\n\r\n                  </div>\r\n                  {validatVerifyPassword && (\r\n                    <div className=\"text-danger\">{validatVerifyPassword}</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProfileInput\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useMemo } from 'react'\r\nimport Select from 'react-select'\r\nimport countryList from 'react-select-country-list'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setLocation } from '../../../redux/featchers/userSlice';\r\n// import \"./register.css\";\r\nconst LocationInput = () => {\r\n\r\n  const [value, setValue] = useState('')\r\n  const options = useMemo(() => countryList().getData(), [])\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const changeHandler = selectedOption => {\r\n    setValue(selectedOption);  // Use the selectedOption directly\r\n    dispatch(setLocation({ location: selectedOption.label }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-wrapper bg-gra-02 p-t-130 p-b-100 font-poppins container-register\">\r\n      <div className=\"wrapper wrapper--w680\">\r\n        <div className=\"card card-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row row-space\">\r\n              <div className=\"col\">\r\n                <h2 className=\"title label \">\r\n                  We would like to know where do you live\r\n                </h2>\r\n                <form>\r\n                  <div className='row mb-3 input-group'>\r\n                    <label htmlFor='state' className='lable'>\r\n                    Country:\r\n                    </label>\r\n                    <Select options={options} value={value} onChange={changeHandler} />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEducationsInput } from \"../../../redux/featchers/userSlice\";\r\nimport \"../../../css/main.css\";\r\nimport translate from \"../../../utill/translator\";\r\n\r\nconst EducationInput = () => {\r\n  const dispatch = useDispatch();\r\n  const [education, setEducation] = useState({ name: \"\", degree: \"\" });\r\n  const [educations, setEducations] = useState([]);\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n  \r\n\r\n  const handleAddEducation = () => {\r\n    setEducations([...educations, education]);\r\n    setEducation({ name: \"\", degree: \"\" });\r\n    console.log(\"educations\", educations);\r\n    dispatch(setEducationsInput({ educations: [...educations, education] }));\r\n  };\r\n\r\n  const handleEducationChange = (field, value) => {\r\n    setEducation({ ...education, [field]: value });\r\n  };\r\n\r\n  const handleDeleteEducation = (index) => {\r\n    const updatedEducations = [...educations];\r\n    updatedEducations.splice(index, 1);\r\n    setEducations(updatedEducations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-wrapper bg-gra-02 p-t-130 p-b-100 font-poppins container-register\">\r\n      <div className=\"wrapper wrapper--w680\">\r\n        <div className=\"card card-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row row-space\">\r\n              <div className=\"col-5 \">\r\n                <h2 className=\"title label \">{translate('register.educationTitle', language)}</h2>\r\n                <div className=\"education mt-3 input-group\">\r\n                  <label className=\"label\">{translate('register.education', language)}:</label>\r\n                  <input\r\n                    placeholder=\"School\"\r\n                    type=\"text\"\r\n                    className=\"input--style-4 js-datepicker\"\r\n                    value={education.name}\r\n                    onChange={(e) =>\r\n                      handleEducationChange(\"name\", e.target.value)\r\n                    }\r\n                  />\r\n                  <select\r\n                    className=\"input--style-4 education-select\"\r\n                    defaultValue={education.degree}\r\n                    onChange={(e) =>\r\n                      handleEducationChange(\"degree\", e.target.value)\r\n                    }\r\n                  >\r\n                    <option value=\"\">Select Degree</option>\r\n                    <option value=\"High School Diploma\">\r\n                      High School Diploma\r\n                    </option>\r\n                    <option value=\"Bachelor's Degree\">Bachelor's Degree</option>\r\n                    <option value=\"Master's Degree\">Master's Degree</option>\r\n                  </select>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\" btn-tl btn topic-list  \"\r\n                    onClick={handleAddEducation}\r\n                  >\r\n                    {translate('register.addEducation', language)}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Display the list of education on the right side */}\r\n              <div className=\"col-5 ms-4 input--style-4\">\r\n                <h2 className=\"list\">{translate('register.eduactionList', language)}</h2>\r\n                <ul className=\"list-group custom-list\">\r\n                  {educations.map((edu, index) => (\r\n                    <li\r\n                      key={index}\r\n                      className=\"list-group-item custom-list-item\"\r\n                    >\r\n                      <strong>{edu.name}</strong> - {edu.degree}\r\n                      <br />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-end\"\r\n                        onClick={() => handleDeleteEducation(index)}\r\n                      >\r\n                        {translate('register.deleteEducation', language)}\r\n                      </button>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { setTopics } from '../../../redux/featchers/userSlice';\r\nimport translate from \"../../../utill/translator\";\r\nimport \"../../../css/main.css\";\r\n\r\nconst Topics = () => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n  const topicsListEn = [\r\n    \"Tanakh\",\r\n    \"Mishnha\",\r\n    \"Talmud\",\r\n    \"Midrash\",\r\n    \"Halakhah\",\r\n    \"Kabbalah\",\r\n    \"Liturgy\",\r\n    \"Jewish Thought\",\r\n    \"Tosefta\",\r\n    \"Chasidut\",\r\n    \"Musar\",\r\n    \"Reponsa\",\r\n    \"Second Temple\",\r\n    \"Reference\",\r\n  ];\r\n  const topicsListHe = [\r\n    `תנ\"ך`,\r\n    \"משנה\",\r\n    \"תלמוד\",\r\n    \"מדרש\",\r\n    \"הלכה\",\r\n    \"קבלה\",\r\n    \"סדר התפילה\",\r\n    \"מחשבת ישראל\",\r\n    \"תוספתא\",\r\n    \"חסידות\",\r\n    \"ספרי מוסר\",\r\n    `שו\"ת`,\r\n    \"בית שני\",\r\n    \"מילונים וספרי יעץ\",\r\n  ];\r\n  let topicsList = language === \"en\" ? [...topicsListEn] : [...topicsListHe];\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [selectedTopics, setSelectedTopics] = useState([]);\r\n\r\n  const handleButtonClick = (topic) => {\r\n    if (selectedTopics.includes(topic)) {\r\n      setSelectedTopics(selectedTopics.filter((selectedTopic) => selectedTopic !== topic));\r\n\r\n    } else {\r\n      setSelectedTopics([...selectedTopics, topic]);\r\n    }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setTopics({ topics: selectedTopics }));\r\n  }, [selectedTopics, dispatch])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container-register\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-4\">\r\n              <div className=\"card-body\">\r\n                <div className=\"col-2\">\r\n                  <div className=\"input-group\">\r\n                    <h2 className=\"title label\">\r\n                    {translate('register.topicsTitle', language)}\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  {topicsList.map((topic, index) => (\r\n                    <div className=\"col-md-4  \">\r\n                      <button\r\n                        type=\"button\"\r\n                        key={index}\r\n                        className={`btn ${selectedTopics.includes(topic)\r\n                            ? \"btn topic-list-2\"\r\n                            : \"btn topic-list \"\r\n                          } m-1 btn btn-tl`}\r\n\r\n                        onClick={() => handleButtonClick(topic)}\r\n                      >\r\n                        {topic}\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAgeRange, setEducationRange, setLocationRange, setFriendListRange } from '../../../redux/featchers/userSlice';\r\nimport \"../../../css/main.css\";\r\n\r\nconst SingleRangeQ = ({ title, questionNumber }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [selectedNumber, setSelectedNumber] = useState(null);\r\n    const handleNumberSelection = (inputValue, questionNumber) => {\r\n        setSelectedNumber(inputValue);\r\n        switch (questionNumber) {\r\n            case '1':\r\n                dispatch(setAgeRange({ ageRange: inputValue }));\r\n                break;\r\n            case '2':\r\n                dispatch(setEducationRange({ educationRange: inputValue }));\r\n                break;\r\n            case '3':\r\n                dispatch(setLocationRange({ locationRange: inputValue }));\r\n                break;\r\n            case '4':\r\n                dispatch(setFriendListRange({ friendListRange: inputValue }));\r\n                break;\r\n            default:;\r\n        }\r\n        console.log(\"update\", inputValue, questionNumber);\r\n\r\n        // dispatch(setAgeRange({ educations: inputValue }));\r\n    };\r\n\r\n\r\n \r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{title}</h4>\r\n            <div className=\"row\" >\r\n                {[1, 2, 3, 4, 5].map((number) => (\r\n                    <button type='button'\r\n                        key={number}\r\n                        className={`btn ${selectedNumber === number ? 'btn topic-list-2' : 'btn topic-list'} m-1 col-1 btn btn-tl`}\r\n                        onClick={() => handleNumberSelection(number, questionNumber)}\r\n                    >\r\n                        {number}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleRangeQ;\r\n\r\n","import React from 'react';\r\nimport SingleRangeQ from './singleRangeQ';\r\nimport \"../../../css/main.css\";\r\nimport translate from \"../../../utill/translator\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst RangeQuestion = () => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n  return (\r\n    <div className=\"page-wrapper p-t-130 p-b-100 font-poppins container-register\">\r\n      <div className=\"wrapper wrapper--w680\">\r\n        <div className=\"card card-4\">\r\n          <div className=\"card-body\">\r\n            <div className=\"row row-space\">\r\n              <div className=\"col m-2\">\r\n                <h2 className=\"title label \">\r\n                {translate('register.topicsQuestion', language)}\r\n                </h2>\r\n                <SingleRangeQ\r\n                  title={translate('register.ageRangeQuestion', language)}\r\n                  questionNumber=\"1\"\r\n                /> <br/>\r\n                <SingleRangeQ\r\n                  title={translate('register.locationRangeQuestion', language)}\r\n                  questionNumber=\"2\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeQuestion;\r\n","import React from 'react';\r\nimport SingleRangeQ from './singleRangeQ';\r\nimport \"../../../css/main.css\";\r\nimport translate from \"../../../utill/translator\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst RangeQuestion = () => {\r\n  const language = useSelector((myStore) => myStore.languageSlice.language);\r\n  \r\n  return (\r\n    <div className=\"page-wrapper p-t-130 p-b-100 font-poppins container-register\">\r\n    <div className=\"wrapper wrapper--w680\">\r\n      <div className=\"card card-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row row-space\">\r\n            <div className=\"col m-2\">\r\n          <h2 className=\"title label\">{translate('register.topicsQuestion', language)}</h2>\r\n          <SingleRangeQ\r\n            title={translate('register.educationRangeQuestion', language)}\r\n            questionNumber=\"3\"\r\n\r\n          />\r\n           <SingleRangeQ\r\n            title={translate('register.friendListRangeQuestion', language)}\r\n            questionNumber=\"4\"\r\n\r\n          />          \r\n              </div>\r\n            </div> \r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeQuestion;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { API_URL, doApiRequest, TOKEN_NAME } from '../../../services/apiService';\r\nimport { verifyToken } from '../../../services/apiService';\r\nimport { handleUserInfo } from '../../../utill/authService';\r\nimport { setLocation } from '../../../redux/featchers/userSlice';\r\nimport Profile from './profileInput';\r\nimport Location from './locationInput';\r\nimport Education from './educationInput';\r\nimport Topic from './topicList';\r\nimport RangeQ1 from './rangeQuestion1';\r\nimport RangeQ2 from './rangeQuestion2';\r\nimport \"../../../css/main.css\";\r\nimport { FaArrowLeft, FaArrowRight,FaCheck  } from 'react-icons/fa';\r\n\r\n\r\nconst AppRegister = () => {\r\n  const dispatch = useDispatch();\r\n  const nav = useNavigate();\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const { handleSubmit } = useForm();\r\n  \r\n\r\n  const steps = [\r\n    { id: \"profile\", component: <Profile /> },\r\n    { id: \"location\", component: <Location /> },\r\n    { id: \"education\", component: <Education /> },\r\n    { id: \"topic\", component: <Topic /> },\r\n    { id: \"rangeQ1\", component: <RangeQ1 /> },\r\n    { id: \"rangeQ2\", component: <RangeQ2 /> },\r\n  ];\r\n\r\n  const selectedCountry = useSelector((state) => state.userSlice.location);\r\n\r\n  const user = useSelector((myStore) => myStore.userSlice.user);\r\n  const userWithoutVerifyPassword = { ...user };\r\n  delete userWithoutVerifyPassword.verifyPassword;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const token = localStorage.getItem(TOKEN_NAME);\r\n      const url = token\r\n        ? API_URL + `/users/${localStorage.getItem(\"USER_ID\")}`\r\n        : API_URL + \"/auth/register\";\r\n\r\n      const method = token ? 'PUT' : 'POST';\r\n      let data;\r\n\r\n      if (token) {\r\n        delete userWithoutVerifyPassword._id;\r\n        delete userWithoutVerifyPassword.dateCreated;\r\n        delete userWithoutVerifyPassword.role;\r\n        delete userWithoutVerifyPassword.__v;\r\n        data = await doApiRequest(url, method, userWithoutVerifyPassword);\r\n      } else {\r\n        data = await doApiRequest(url, method, userWithoutVerifyPassword);\r\n      }\r\n\r\n      if (data.status === 201) {\r\n        nav(\"/user\");\r\n        window.location.reload();\r\n      } else if (data.status === 400) {\r\n        console.log(\"status 400\");\r\n      }\r\n\r\n      if (data.data.token) {\r\n        localStorage.setItem(TOKEN_NAME, data.data.token);\r\n        const decodedToken = data.data.token;\r\n        verifyToken(decodedToken);\r\n      }\r\n\r\n      await handleUserInfo(dispatch);\r\n\r\n      if (localStorage.getItem(\"ROLE\") === \"admin\") {\r\n        nav(\"/admin\");\r\n      } else if (localStorage.getItem(\"ROLE\") === \"user\") {\r\n        nav(\"/user\");\r\n      } else {\r\n        nav(\"/\");\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  const handleContinueClick = () => {\r\n    if (currentStep < 6) {\r\n      setCurrentStep((prevStep) => prevStep + 1);\r\n    } else {\r\n      handleSubmit(onSubmit);\r\n    }\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep((prevStep) => prevStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitButtonClick = () => {\r\n    handleSubmit(onSubmit)();\r\n  };\r\n\r\n  return (\r\n    //     <div className='container-register'>\r\n    //       <div className='row'>\r\n\r\n    //         <form>\r\n    //         <button type='button' className='btn btn-secondary col- mx-2' onClick={handleBackClick}>\r\n    //                 Back\r\n    //               </button>\r\n    //           {steps.map((step, index) => (\r\n    //             <div key={index} style={{ display: currentStep === index ? 'block' : 'none' }}>\r\n    //               {step.component}\r\n    //             </div>\r\n    //           ))}\r\n\r\n    //               {currentStep === 5 ? (\r\n    //                 <button type='button' className='btn btn-success col-2 mx-2' onClick={handleSubmitButtonClick}>\r\n    //                   Submit\r\n    //                 </button>\r\n    //               ) : (\r\n    //                 <button type='button' className='btn btn-info col-2 mx-2' onClick={handleContinueClick}>\r\n    //                   Continue\r\n    //                 </button>\r\n    //               )}\r\n    //         </form>\r\n    //         </div>\r\n\r\n    //      </div >\r\n\r\n    //   );\r\n    // };\r\n\r\n    <div className=\"container-register\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"d-flex justify-content-evenly mt-4 position-relative\">\r\n            {steps.map((step, index) => (\r\n              <div\r\n                key={index}\r\n                style={{ display: currentStep === index ? \"block\" : \"none\" }}\r\n              >\r\n                {step.component}\r\n              </div>\r\n            ))}\r\n            <div className=\"position-absolute top-50 start-0 translate-middle me-5 z-1\">\r\n              {currentStep !== 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\" btn-back\"\r\n                  onClick={handleBackClick}\r\n                >\r\n                  <FaArrowLeft />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"position-absolute top-50 start-100 translate-middle d-flex justify-content-center me-5\">\r\n              {currentStep !== 5 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-continue\"\r\n                  onClick={handleContinueClick}\r\n                >\r\n                  <FaArrowRight />\r\n                </button>\r\n              )}\r\n              {currentStep === 5 && (\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-continue \"\r\n                    onClick={handleSubmitButtonClick}\r\n                  >\r\n                    <FaCheck /> \r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AppRegister;\r\n\r\n\r\n\r\n\r\n","// translator.js\r\nimport enTranslations from '../locals/en.json';\r\nimport heTranslations from '../locals/he.json';\r\n\r\nconst translations = {\r\n  en: enTranslations,\r\n  he: heTranslations,\r\n};\r\n\r\nconst translate = (key, lang) => {\r\n  const keys = key.split('.');\r\n  let currentTranslation = translations[lang];\r\n\r\n  for (const k of keys) {\r\n    if (!currentTranslation || !currentTranslation[k]) {\r\n      return key; // Return the key itself if translation not found\r\n    }\r\n    currentTranslation = currentTranslation[k];\r\n  }\r\n\r\n  return currentTranslation;\r\n};\r\n\r\nexport default translate;\r\n"],"names":["ProfileInput","dispatch","useDispatch","user","useSelector","myStore","userSlice","language","languageSlice","dateOfBirth","setDateOfBirth1","useState","validate","setValidate","validationError","setValidationError","validatFirstName","setValidatFirstName","validatLastName","setValidatLastName","validatEmail","setValidatEmail","validatPassword","setValidatPassword","validatVerifyPassword","setValidatVerifyPassword","passwordInput","setPasswordInput","validatPhoneNumber","setValidatPhoneNumber","selectedFile","setSelectedFile","handleInputChange","e","inputName","inputValue","target","value","length","setFirstName","firstName","setLastName","lastName","test","setEmail","email","setPassword","password","setVerifyPassword","verifyPassword","setPhoneNumber","phoneNumber","setGender","gender","setDateOfBirth","setProfilePic","profilePic","_jsx","className","children","_jsxs","method","localStorage","getItem","TOKEN_NAME","htmlFor","translate","src","URL","createObjectURL","alt","FontAwesomeIcon","icon","size","type","accept","id","onInput","file","files","handleFileChange","name","defaultValue","currentDate","Date","selectedDate","twelveYearsAgo","setFullYear","getFullYear","handleDateChange","required","disabled","hidden","LocationInput","setValue","options","useMemo","countryList","getData","Select","onChange","selectedOption","setLocation","location","label","EducationInput","education","setEducation","degree","educations","setEducations","handleEducationChange","field","placeholder","onClick","handleAddEducation","console","log","setEducationsInput","map","edu","index","updatedEducations","splice","handleDeleteEducation","Topics","topicsList","selectedTopics","setSelectedTopics","useEffect","setTopics","topics","class","topic","concat","includes","filter","selectedTopic","handleButtonClick","_ref","title","questionNumber","selectedNumber","setSelectedNumber","number","handleNumberSelection","setAgeRange","ageRange","setEducationRange","educationRange","setLocationRange","locationRange","setFriendListRange","friendListRange","RangeQuestion","SingleRangeQ","AppRegister","nav","useNavigate","currentStep","setCurrentStep","handleSubmit","useForm","steps","component","Profile","Location","Education","Topic","RangeQ1","RangeQ2","userWithoutVerifyPassword","state","onSubmit","async","token","url","API_URL","data","_id","dateCreated","role","__v","doApiRequest","status","window","reload","setItem","decodedToken","verifyToken","handleUserInfo","error","step","style","display","handleBackClick","prevStep","FaArrowLeft","handleContinueClick","FaArrowRight","handleSubmitButtonClick","FaCheck","translations","en","he","key","lang","keys","split","currentTranslation","k"],"sourceRoot":""}